{
  "name": "upcoach",
  "version": "1.0.0",
  "private": true,
  "packageManager": "npm@10.0.0",
  "description": "UpCoach - AI-Powered Coaching Platform Monorepo",
  "workspaces": [
    "packages/*",
    "apps/*",
    "services/*"
  ],
  "scripts": {
    "dev": "turbo run dev",
    "build": "turbo run build",
    "test": "jest --config jest.config.comprehensive.js",
    "lint": "turbo run lint --filter=!@upcoach/ui --filter=!@upcoach/utils",
    "format": "turbo run format",
    "type-check": "turbo run type-check",
    "clean": "turbo run clean && rm -rf node_modules",
    "install:all": "npm install && npm run install:workspaces",
    "install:workspaces": "npm install --workspaces",
    "// Development Commands": "",
    "dev:backend": "npm run dev --workspace=@upcoach/api",
    "dev:admin": "npm run dev --workspace=@upcoach/admin-panel",
    "dev:cms": "npm run dev --workspace=@upcoach/cms-panel",
    "dev:landing": "npm run dev --workspace=@upcoach/landing-page",
    "dev:mobile": "cd apps/mobile && flutter run",
    "dev:all": "concurrently \"npm run dev:backend\" \"npm run dev:admin\" \"npm run dev:cms\" \"npm run dev:landing\"",
    "// Testing Commands - A+ Standards": "",
    "test:unit": "turbo run test:unit",
    "test:e2e": "turbo run test:e2e",
    "test:integration": "turbo run test:integration",
    "test:coverage": "turbo run test:coverage",
    "// Comprehensive Testing Suite": "",
    "test:comprehensive": "node scripts/run-comprehensive-tests.js",
    "test:comprehensive:all": "node scripts/run-comprehensive-tests.js --all --parallel",
    "test:comprehensive:ci": "node scripts/run-comprehensive-tests.js --all --fail-fast --verbose",
    "// Backend Testing": "",
    "test:backend:comprehensive": "jest --config jest.config.comprehensive.js --selectProjects 'Backend Unit Tests' 'Backend Integration Tests'",
    "test:backend:unit": "jest --config jest.config.comprehensive.js --selectProjects 'Backend Unit Tests'",
    "test:backend:integration": "jest --config jest.config.comprehensive.js --selectProjects 'Backend Integration Tests'",
    "// Frontend Testing": "",
    "test:frontend:comprehensive": "jest --config jest.config.comprehensive.js --selectProjects 'Frontend Unit Tests - Admin Panel' 'Frontend Unit Tests - CMS Panel' 'Frontend Unit Tests - Landing Page'",
    "test:frontend:admin": "jest --config jest.config.comprehensive.js --selectProjects 'Frontend Unit Tests - Admin Panel'",
    "test:frontend:cms": "jest --config jest.config.comprehensive.js --selectProjects 'Frontend Unit Tests - CMS Panel'",
    "test:frontend:landing": "jest --config jest.config.comprehensive.js --selectProjects 'Frontend Unit Tests - Landing Page'",
    "// Mobile Testing": "",
    "test:mobile:comprehensive": "cd apps/mobile && flutter test --coverage && flutter test test/widgets/ && flutter test test/golden/",
    "test:mobile:unit": "cd apps/mobile && flutter test",
    "test:mobile:widgets": "cd apps/mobile && flutter test test/widgets/",
    "test:mobile:golden": "cd apps/mobile && flutter test test/golden/",
    "// Contract Testing": "",
    "test:contracts": "jest --config jest.config.comprehensive.js --selectProjects 'Contract Tests'",
    "test:contracts:api": "jest packages/test-contracts/src/api/",
    "// Performance Testing": "",
    "test:performance": "jest --config jest.config.comprehensive.js --selectProjects 'Performance Tests'",
    "test:performance:api": "jest tests/performance/api-load.test.ts",
    "test:performance:frontend": "jest tests/performance/frontend-performance.test.ts",
    "test:performance:check": "node scripts/performance-gate-check.js",
    "// Security Testing": "",
    "test:security": "jest --config jest.config.comprehensive.js --selectProjects 'Security Tests'",
    "test:security:auth": "jest tests/security/auth-security.test.ts",
    "test:security:api": "jest tests/security/api-security.test.ts",
    "test:security:scan": "npm audit --audit-level=high && snyk test",
    "// Visual Testing": "",
    "test:visual": "cd visual-tests && npx playwright test",
    "test:visual:update": "cd visual-tests && npx playwright test --update-snapshots",
    "test:visual:ui": "cd visual-tests && npx playwright test --ui",
    "// Coverage & Reporting": "",
    "coverage:combine": "nyc merge coverage/ coverage/combined/coverage.json",
    "coverage:report": "nyc report --reporter=html --reporter=lcov --reporter=text-summary",
    "coverage:check": "nyc check-coverage --lines 95 --functions 95 --branches 90 --statements 95",
    "// Quality Gates & Reporting": "",
    "quality:gates:check": "node scripts/quality-gates-check.js",
    "quality:assess": "node scripts/quality-assessment.js",
    "report:quality": "node scripts/generate-quality-report.js",
    "report:comprehensive": "node scripts/generate-comprehensive-report.js",
    "badges:update": "node scripts/generate-badges.js",
    "// CI/CD Utilities": "",
    "ci:setup": "node tests/global-setup.ts",
    "ci:teardown": "node tests/global-teardown.ts",
    "ci:test": "npm run test:comprehensive:ci",
    "ci:quality": "npm run quality:gates:check",
    "deployment:readiness:check": "node scripts/deployment-readiness-check.js",
    "version:next": "node scripts/version-calculator.js",
    "// Docker Commands": "",
    "docker:build": "docker-compose build",
    "docker:up": "docker-compose up",
    "docker:down": "docker-compose down",
    "docker:rebuild": "docker-compose down && docker-compose build --no-cache && docker-compose up",
    "// Database Commands": "",
    "db:migrate": "npm run db:migrate --workspace=@upcoach/api",
    "db:seed": "npm run db:seed --workspace=@upcoach/api",
    "db:reset": "npm run db:reset --workspace=@upcoach/api",
    "// Utility Commands": "",
    "prepare": "husky install",
    "changeset": "changeset",
    "version": "changeset version",
    "release": "turbo run build && changeset publish"
  },
  "devDependencies": {
    "@changesets/cli": "^2.27.1",
    "@commitlint/cli": "^18.4.3",
    "@commitlint/config-conventional": "^18.4.3",
    "@percy/cli": "^1.27.4",
    "@playwright/test": "^1.40.1",
    "@swc/core": "^1.3.96",
    "@types/node": "^20.10.0",
    "@typescript-eslint/eslint-plugin": "^6.13.0",
    "@typescript-eslint/parser": "^6.13.0",
    "artillery": "^2.0.0",
    "chalk": "^4.1.2",
    "codecov": "^3.8.3",
    "concurrently": "^8.2.2",
    "eslint": "8.57.1",
    "eslint-config-prettier": "^9.0.0",
    "eslint-import-resolver-typescript": "^4.4.4",
    "eslint-plugin-import": "^2.32.0",
    "eslint-plugin-jsx-a11y": "^6.10.2",
    "eslint-plugin-react": "^7.37.5",
    "eslint-plugin-react-hooks": "^5.2.0",
    "husky": "^8.0.3",
    "jest": "^29.7.0",
    "jest-html-reporters": "^3.1.5",
    "jest-junit": "^16.0.0",
    "jest-watch-select-projects": "^2.0.0",
    "jest-watch-typeahead": "^2.2.2",
    "lint-staged": "^15.1.0",
    "nyc": "^15.1.0",
    "prettier": "^3.1.0",
    "tsup": "^8.0.1",
    "turbo": "^1.11.0",
    "typescript": "^5.3.0",
    "wait-on": "^7.2.0"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "lint-staged": {
    "*.{js,jsx,ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md,yml,yaml}": [
      "prettier --write"
    ]
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/upcoach/upcoach-project.git"
  },
  "author": "UpCoach Team",
  "license": "PROPRIETARY"
}
