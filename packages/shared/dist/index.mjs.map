{"version":3,"sources":["../src/components/SessionWarningModal.tsx","../src/components/LoadingSpinner.tsx","../src/hooks/index.ts","../src/utils/performance.ts","../src/utils/index.ts","../src/services/apiClient.ts"],"names":["jsx","React"],"mappings":"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","file":"index.mjs","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\ninterface SessionWarningModalProps {\n  onExtend?: () => void;\n  onExpire?: () => void;\n  className?: string;\n}\n\n/**\n * Accessible session timeout warning modal\n * Provides a 2-minute warning before session expires\n */\nexport const SessionWarningModal: React.FC<SessionWarningModalProps> = ({\n  onExtend,\n  onExpire,\n  className = '',\n}) => {\n  const [isVisible, setIsVisible] = useState(false);\n  const [timeRemaining, setTimeRemaining] = useState<string>('2:00');\n  const modalRef = useRef<HTMLDivElement>(null);\n  const extendButtonRef = useRef<HTMLButtonElement>(null);\n  const previousFocusRef = useRef<HTMLElement | null>(null);\n  const countdownIntervalRef = useRef<NodeJS.Timeout | null>(null);\n\n  useEffect(() => {\n    const handleWarningShown = (remainingTime: string = '2:00') => {\n      // Store current focus\n      previousFocusRef.current = document.activeElement as HTMLElement;\n\n      setIsVisible(true);\n      setTimeRemaining(remainingTime);\n\n      // Focus the extend button when modal opens\n      setTimeout(() => {\n        extendButtonRef.current?.focus();\n      }, 100);\n\n      // Start countdown update\n      if (countdownIntervalRef.current) {\n        clearInterval(countdownIntervalRef.current);\n      }\n\n      countdownIntervalRef.current = setInterval(() => {\n        const [minutes, seconds] = remainingTime.split(':').map(Number);\n        const totalSeconds = minutes * 60 + seconds - 1;\n        \n        if (totalSeconds <= 0) {\n          if (onExpire) onExpire();\n          return;\n        }\n\n        const newMinutes = Math.floor(totalSeconds / 60);\n        const newSeconds = totalSeconds % 60;\n        const newTimeString = `${newMinutes}:${newSeconds.toString().padStart(2, '0')}`;\n        setTimeRemaining(newTimeString);\n\n        // Update ARIA live region\n        const liveRegion = document.getElementById('session-countdown');\n        if (liveRegion) {\n          liveRegion.textContent = `Time remaining: ${newTimeString}`;\n        }\n      }, 1000);\n    };\n\n    const handleWarningHidden = () => {\n      setIsVisible(false);\n\n      // Clear countdown\n      if (countdownIntervalRef.current) {\n        clearInterval(countdownIntervalRef.current);\n        countdownIntervalRef.current = null;\n      }\n\n      // Restore previous focus\n      if (previousFocusRef.current) {\n        previousFocusRef.current.focus();\n        previousFocusRef.current = null;\n      }\n    };\n\n    const handleSessionExpired = () => {\n      setIsVisible(false);\n\n      // Clear countdown\n      if (countdownIntervalRef.current) {\n        clearInterval(countdownIntervalRef.current);\n        countdownIntervalRef.current = null;\n      }\n\n      if (onExpire) {\n        onExpire();\n      }\n    };\n\n    const handleSessionExtended = () => {\n      handleWarningHidden();\n\n      if (onExtend) {\n        onExtend();\n      }\n    };\n\n    return () => {\n      if (countdownIntervalRef.current) {\n        clearInterval(countdownIntervalRef.current);\n      }\n    };\n  }, [onExtend, onExpire]);\n\n  // Handle keyboard navigation\n  useEffect(() => {\n    if (!isVisible) return;\n\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (e.key === 'Escape') {\n        // Don't allow closing with Escape - user must make a choice\n        e.preventDefault();\n      } else if (e.key === 'Enter' || e.key === ' ') {\n        // Extend session on Enter or Space\n        if (document.activeElement === extendButtonRef.current) {\n          e.preventDefault();\n          handleExtendSession();\n        }\n      }\n    };\n\n    const handleFocusTrap = (e: FocusEvent) => {\n      if (!modalRef.current || !isVisible) return;\n\n      // Keep focus within modal\n      if (!modalRef.current.contains(e.target as Node)) {\n        e.preventDefault();\n        extendButtonRef.current?.focus();\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown);\n    document.addEventListener('focusin', handleFocusTrap);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n      document.removeEventListener('focusin', handleFocusTrap);\n    };\n  }, [isVisible]);\n\n  const handleExtendSession = () => {\n    if (onExtend) {\n      onExtend();\n    }\n    setIsVisible(false);\n  };\n\n  const handleLogout = () => {\n    setIsVisible(false);\n\n    if (onExpire) {\n      onExpire();\n    }\n  };\n\n  if (!isVisible) return null;\n\n  return (\n    <>\n      {/* Backdrop */}\n      <div className=\"fixed inset-0 z-40 bg-black bg-opacity-50\" aria-hidden=\"true\" />\n\n      {/* Modal */}\n      <div\n        ref={modalRef}\n        role=\"alertdialog\"\n        aria-modal=\"true\"\n        aria-labelledby=\"session-warning-title\"\n        aria-describedby=\"session-warning-description\"\n        className={`fixed inset-0 z-50 flex items-center justify-center p-4 ${className}`}\n      >\n        <div className=\"max-w-md w-full bg-white rounded-lg shadow-xl p-6\">\n          {/* Icon */}\n          <div className=\"flex justify-center mb-4\">\n            <div className=\"w-16 h-16 bg-yellow-100 rounded-full flex items-center justify-center\">\n              <svg\n                className=\"w-8 h-8 text-yellow-600\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                aria-hidden=\"true\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\"\n                />\n              </svg>\n            </div>\n          </div>\n\n          {/* Title */}\n          <h2\n            id=\"session-warning-title\"\n            className=\"text-xl font-bold text-center text-gray-900 mb-2\"\n          >\n            Session Expiring Soon\n          </h2>\n\n          {/* Description */}\n          <div id=\"session-warning-description\" className=\"text-center mb-6\">\n            <p className=\"text-gray-600 mb-2\">Your session will expire due to inactivity.</p>\n            <p className=\"text-lg font-semibold text-gray-900\">Time remaining: {timeRemaining}</p>\n          </div>\n\n          {/* Live region for countdown updates */}\n          <div\n            id=\"session-countdown\"\n            role=\"timer\"\n            aria-live=\"polite\"\n            aria-atomic=\"true\"\n            className=\"sr-only\"\n          >\n            Time remaining: {timeRemaining}\n          </div>\n\n          {/* Actions */}\n          <div className=\"flex gap-3\">\n            <button\n              ref={extendButtonRef}\n              onClick={handleExtendSession}\n              className=\"flex-1 px-4 py-2 bg-blue-600 text-white font-medium rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\"\n              aria-label=\"Extend session and continue working\"\n            >\n              Continue Working\n            </button>\n            <button\n              onClick={handleLogout}\n              className=\"flex-1 px-4 py-2 bg-gray-200 text-gray-700 font-medium rounded-md hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2\"\n              aria-label=\"Log out now\"\n            >\n              Log Out\n            </button>\n          </div>\n\n          {/* Help text */}\n          <p className=\"mt-4 text-xs text-center text-gray-500\">\n            For your security, sessions expire after 30 minutes of inactivity.\n          </p>\n        </div>\n      </div>\n\n      {/* Screen reader announcement for critical moments */}\n      <div role=\"status\" aria-live=\"assertive\" aria-atomic=\"true\" className=\"sr-only\">\n        {parseInt(timeRemaining) <= 30 &&\n          `Warning: Only ${timeRemaining} remaining. Please choose to continue working or log out.`}\n      </div>\n    </>\n  );\n};\n\n/**\n * Hook for integrating session warning modal\n */\nexport function useSessionWarning() {\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    // Mock session manager for now\n    const handleWarning = () => setShowModal(true);\n    const handleHidden = () => setShowModal(false);\n    const handleExpired = () => setShowModal(false);\n\n    // Add cleanup if needed\n    return () => {\n      // Cleanup logic here\n    };\n  }, []);\n\n  return showModal;\n}\n\nexport default SessionWarningModal;","import React from 'react';\n\nexport interface LoadingSpinnerProps {\n  size?: 'sm' | 'md' | 'lg';\n  color?: string;\n  className?: string;\n}\n\nexport const LoadingSpinner: React.FC<LoadingSpinnerProps> = ({\n  size = 'md',\n  color = '#3b82f6',\n  className = '',\n}) => {\n  const sizeClasses = {\n    sm: 'w-4 h-4',\n    md: 'w-8 h-8',\n    lg: 'w-12 h-12',\n  };\n\n  return (\n    <div\n      className={`inline-block animate-spin rounded-full border-2 border-solid border-current border-r-transparent align-[-0.125em] ${sizeClasses[size]} ${className}`}\n      style={{ borderTopColor: color, borderLeftColor: color, borderBottomColor: color }}\n      role=\"status\"\n      aria-label=\"Loading\"\n    >\n      <span className=\"sr-only\">Loading...</span>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;","/**\n * Shared hooks index\n */\n\n// Placeholder for shared hooks\nexport const SharedHooks = {};","/**\n * Core Web Vitals and Performance Monitoring Utilities\n * Implements comprehensive performance tracking across all UpCoach applications\n */\n\nexport interface Metric {\n  id: string;\n  name: string;\n  value: number;\n  delta?: number;\n  rating: 'good' | 'needs-improvement' | 'poor';\n  entries?: PerformanceEntry[];\n  navigationType?: string;\n}\n\nexport interface PerformanceReport {\n  timestamp: number;\n  url: string;\n  userAgent: string;\n  connectionType: string;\n  metrics: Metric[];\n  pageLoadTime: number;\n  resourceTimings: ResourceTiming[];\n}\n\ninterface ResourceTiming {\n  name: string;\n  duration: number;\n  size: number;\n  type: string;\n}\n\n// Core Web Vitals thresholds (Google standards)\nconst THRESHOLDS = {\n  FCP: { good: 1800, poor: 3000 }, // First Contentful Paint\n  LCP: { good: 2500, poor: 4000 }, // Largest Contentful Paint\n  CLS: { good: 0.1, poor: 0.25 },  // Cumulative Layout Shift\n  FID: { good: 100, poor: 300 },   // First Input Delay\n  TTFB: { good: 800, poor: 1800 }  // Time to First Byte\n};\n\n/**\n * Get performance rating based on metric value and thresholds\n */\nfunction getPerformanceRating(metricName: string, value: number): 'good' | 'needs-improvement' | 'poor' {\n  const threshold = THRESHOLDS[metricName as keyof typeof THRESHOLDS];\n  if (!threshold) return 'good';\n  \n  if (value <= threshold.good) return 'good';\n  if (value <= threshold.poor) return 'needs-improvement';\n  return 'poor';\n}\n\n/**\n * Measure and report Core Web Vitals\n */\nexport function measureWebVitals(callback: (metric: Metric) => void): void {\n  // Only run in browser environment\n  if (typeof window === 'undefined') return;\n\n  try {\n    // Dynamic import for web-vitals to avoid SSR issues\n    import('web-vitals').then(({ onFCP, onLCP, onCLS, onFID, onTTFB }) => {\n      onFCP((metric) => {\n        callback({\n          id: metric.id,\n          name: 'FCP',\n          value: metric.value,\n          delta: metric.delta,\n          rating: getPerformanceRating('FCP', metric.value),\n          entries: metric.entries,\n          navigationType: metric.navigationType\n        });\n      });\n\n      onLCP((metric) => {\n        callback({\n          id: metric.id,\n          name: 'LCP',\n          value: metric.value,\n          delta: metric.delta,\n          rating: getPerformanceRating('LCP', metric.value),\n          entries: metric.entries,\n          navigationType: metric.navigationType\n        });\n      });\n\n      onCLS((metric) => {\n        callback({\n          id: metric.id,\n          name: 'CLS',\n          value: metric.value,\n          delta: metric.delta,\n          rating: getPerformanceRating('CLS', metric.value),\n          entries: metric.entries,\n          navigationType: metric.navigationType\n        });\n      });\n\n      onFID((metric) => {\n        callback({\n          id: metric.id,\n          name: 'FID',\n          value: metric.value,\n          delta: metric.delta,\n          rating: getPerformanceRating('FID', metric.value),\n          entries: metric.entries,\n          navigationType: metric.navigationType\n        });\n      });\n\n      onTTFB((metric) => {\n        callback({\n          id: metric.id,\n          name: 'TTFB',\n          value: metric.value,\n          delta: metric.delta,\n          rating: getPerformanceRating('TTFB', metric.value),\n          entries: metric.entries,\n          navigationType: metric.navigationType\n        });\n      });\n    }).catch((error) => {\n      console.warn('Failed to load web-vitals library:', error);\n    });\n  } catch (error) {\n    console.warn('Error measuring web vitals:', error);\n  }\n}\n\n/**\n * Collect comprehensive performance report\n */\nexport function generatePerformanceReport(metrics: Metric[]): PerformanceReport {\n  const navigation = performance.getEntriesByType('navigation')[0] as PerformanceNavigationTiming;\n  const resources = performance.getEntriesByType('resource') as PerformanceResourceTiming[];\n  \n  return {\n    timestamp: Date.now(),\n    url: window.location.href,\n    userAgent: navigator.userAgent,\n    connectionType: (navigator as any).connection?.effectiveType || 'unknown',\n    metrics,\n    pageLoadTime: navigation ? navigation.loadEventEnd - navigation.fetchStart : 0,\n    resourceTimings: resources.slice(0, 20).map(resource => ({\n      name: resource.name,\n      duration: resource.duration,\n      size: resource.transferSize || 0,\n      type: getResourceType(resource.name)\n    }))\n  };\n}\n\n/**\n * Get resource type from URL\n */\nfunction getResourceType(url: string): string {\n  if (url.includes('.css')) return 'stylesheet';\n  if (url.includes('.js')) return 'script';\n  if (url.match(/\\.(jpg|jpeg|png|gif|webp|svg)$/)) return 'image';\n  if (url.includes('.woff') || url.includes('.woff2')) return 'font';\n  return 'other';\n}\n\n/**\n * Send performance data to analytics endpoint\n */\nexport async function reportPerformanceData(report: PerformanceReport): Promise<void> {\n  try {\n    // Use beacon API for reliable delivery\n    if ('sendBeacon' in navigator) {\n      navigator.sendBeacon('/api/analytics/performance', JSON.stringify(report));\n    } else {\n      // Fallback to fetch\n      await fetch('/api/analytics/performance', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(report),\n        keepalive: true\n      });\n    }\n  } catch (error) {\n    console.warn('Failed to report performance data:', error);\n  }\n}\n\n/**\n * Performance budget checker\n */\nexport interface PerformanceBudget {\n  FCP: number;\n  LCP: number;\n  CLS: number;\n  FID: number;\n  TTFB: number;\n}\n\nconst DEFAULT_BUDGET: PerformanceBudget = {\n  FCP: 1800,\n  LCP: 2500,\n  CLS: 0.1,\n  FID: 100,\n  TTFB: 800\n};\n\nexport function checkPerformanceBudget(\n  metrics: Metric[], \n  budget: PerformanceBudget = DEFAULT_BUDGET\n): { passed: boolean; violations: string[] } {\n  const violations: string[] = [];\n  \n  metrics.forEach(metric => {\n    const budgetValue = budget[metric.name as keyof PerformanceBudget];\n    if (budgetValue && metric.value > budgetValue) {\n      violations.push(`${metric.name}: ${metric.value}ms exceeds budget of ${budgetValue}ms`);\n    }\n  });\n  \n  return {\n    passed: violations.length === 0,\n    violations\n  };\n}\n\n/**\n * Initialize performance monitoring for an application\n */\nexport function initializePerformanceMonitoring(options: {\n  enableReporting?: boolean;\n  budget?: PerformanceBudget;\n  onMetric?: (metric: Metric) => void;\n} = {}): void {\n  const { enableReporting = true, budget, onMetric } = options;\n  const collectedMetrics: Metric[] = [];\n  \n  measureWebVitals((metric) => {\n    collectedMetrics.push(metric);\n    \n    // Call custom metric handler\n    onMetric?.(metric);\n    \n    // Check budget if provided\n    if (budget) {\n      const budgetCheck = checkPerformanceBudget([metric], budget);\n      if (!budgetCheck.passed) {\n        console.warn('Performance budget violation:', budgetCheck.violations);\n      }\n    }\n    \n    // Log metric for debugging\n    console.debug(`${metric.name}: ${metric.value}ms (${metric.rating})`);\n  });\n  \n  // Send report when page unloads\n  if (enableReporting) {\n    window.addEventListener('beforeunload', () => {\n      if (collectedMetrics.length > 0) {\n        const report = generatePerformanceReport(collectedMetrics);\n        reportPerformanceData(report);\n      }\n    });\n  }\n}\n\n/**\n * Create performance monitoring hook for React applications\n */\nexport function createPerformanceHook() {\n  return function usePerformanceMonitoring(enabled = true) {\n    // Use lazy React import to avoid dependency issues\n    if (typeof window !== 'undefined' && (window as any).React?.useEffect) {\n      const React = (window as any).React;\n      React.useEffect(() => {\n        if (!enabled) return;\n        \n        initializePerformanceMonitoring({\n          enableReporting: true,\n          onMetric: (metric) => {\n            // Could integrate with React DevTools or state management\n            if (process.env.NODE_ENV === 'development') {\n              console.debug('Performance metric:', metric);\n            }\n          }\n        });\n      }, [enabled]);\n    } else {\n      console.warn('React not available for performance hook');\n    }\n  };\n}","/**\n * Shared utilities index\n */\n\n// Performance monitoring utilities\nexport * from './performance';\n\n// Placeholder for additional shared utilities\nexport const SharedUtils = {};\n","/**\n * Unified API Client Factory\n * Creates configured axios instances for admin and CMS panels\n */\n\nimport axios, { AxiosInstance, AxiosError } from 'axios';\n\nexport interface ApiClientConfig {\n  baseURL: string;\n  timeout?: number;\n  withCredentials?: boolean;\n  getAuthToken?: () => string | null;\n  getCSRFToken?: () => Promise<string | null>;\n  skipCSRF?: boolean;\n  onUnauthorized?: () => void;\n  onError?: (error: AxiosError) => void;\n}\n\nexport interface ApiClient extends AxiosInstance {\n  setAuthToken: (token: string | null) => void;\n}\n\n/**\n * Create a configured API client instance\n */\nexport function createApiClient(config: ApiClientConfig): ApiClient {\n  const client = axios.create({\n    baseURL: config.baseURL,\n    timeout: config.timeout || 30000,\n    withCredentials: config.withCredentials || false,\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  }) as ApiClient;\n\n  // Auth token management\n  let authToken: string | null = null;\n\n  client.setAuthToken = (token: string | null) => {\n    authToken = token;\n  };\n\n  // Request interceptor for auth and CSRF tokens\n  client.interceptors.request.use(\n    async requestConfig => {\n      // Add auth token\n      const token = authToken || (config.getAuthToken ? config.getAuthToken() : null);\n      if (token) {\n        requestConfig.headers.Authorization = `Bearer ${token}`;\n      }\n\n      // Add CSRF token for state-changing requests\n      const method = requestConfig.method?.toUpperCase();\n      if (\n        !config.skipCSRF &&\n        method &&\n        ['POST', 'PUT', 'DELETE', 'PATCH'].includes(method) &&\n        !requestConfig.headers['X-Skip-CSRF']\n      ) {\n        try {\n          const csrfToken = config.getCSRFToken ? await config.getCSRFToken() : null;\n          if (csrfToken) {\n            requestConfig.headers['X-CSRF-Token'] = csrfToken;\n          }\n        } catch (error) {\n          console.warn('Failed to get CSRF token:', error);\n          // Continue without CSRF token - let server handle it\n        }\n      }\n\n      return requestConfig;\n    },\n    error => {\n      return Promise.reject(error);\n    }\n  );\n\n  // Response interceptor for error handling\n  client.interceptors.response.use(\n    response => response,\n    async (error: AxiosError) => {\n      // Handle 401 Unauthorized\n      if (error.response?.status === 401 && config.onUnauthorized) {\n        config.onUnauthorized();\n      }\n\n      // Handle CSRF token expiry (403 with specific error)\n      if (\n        error.response?.status === 403 &&\n        (error.response.data as any)?.code === 'CSRF_TOKEN_INVALID'\n      ) {\n        // Retry once with new CSRF token\n        if (!(error.config as any)?._retried && config.getCSRFToken) {\n          (error.config as any)._retried = true;\n\n          try {\n            // Force refresh CSRF token\n            const newToken = await config.getCSRFToken();\n            if (newToken && error.config) {\n              error.config.headers['X-CSRF-Token'] = newToken;\n              return client(error.config);\n            }\n          } catch (csrfError) {\n            console.error('Failed to refresh CSRF token:', csrfError);\n          }\n        }\n      }\n\n      // Call custom error handler\n      if (config.onError) {\n        config.onError(error);\n      }\n\n      return Promise.reject(error);\n    }\n  );\n\n  return client;\n}\n\n/**\n * Helper function to handle API errors consistently\n */\nexport function handleApiError(error: any): {\n  message: string;\n  code?: string;\n  details?: any;\n} {\n  if (axios.isAxiosError(error)) {\n    const response = error.response;\n\n    if (response) {\n      // Server responded with error\n      return {\n        message: response.data?.message || response.data?.error || `Error: ${response.status}`,\n        code: response.data?.code || String(response.status),\n        details: response.data,\n      };\n    } else if (error.request) {\n      // Request made but no response\n      return {\n        message: 'No response from server. Please check your connection.',\n        code: 'NETWORK_ERROR',\n      };\n    }\n  }\n\n  // Something else happened\n  return {\n    message: error.message || 'An unexpected error occurred',\n    code: 'UNKNOWN_ERROR',\n  };\n}\n\n/**\n * Create a retry wrapper for API calls\n */\nexport function withRetry<T>(\n  apiCall: () => Promise<T>,\n  options: {\n    maxRetries?: number;\n    delay?: number;\n    shouldRetry?: (error: any) => boolean;\n  } = {}\n): Promise<T> {\n  const {\n    maxRetries = 3,\n    delay = 1000,\n    shouldRetry = error => {\n      // Retry on network errors and 5xx server errors\n      if (axios.isAxiosError(error)) {\n        return !error.response || error.response.status >= 500;\n      }\n      return false;\n    },\n  } = options;\n\n  return new Promise(async (resolve, reject) => {\n    let lastError: any;\n\n    for (let i = 0; i < maxRetries; i++) {\n      try {\n        const result = await apiCall();\n        return resolve(result);\n      } catch (error) {\n        lastError = error;\n\n        if (!shouldRetry(error) || i === maxRetries - 1) {\n          return reject(error);\n        }\n\n        // Exponential backoff\n        await new Promise(r => setTimeout(r, delay * Math.pow(2, i)));\n      }\n    }\n\n    reject(lastError);\n  });\n}\n\n/**\n * Create request/response transformers\n */\nexport const transformers = {\n  // Convert snake_case to camelCase\n  snakeToCamel: (data: any): any => {\n    if (Array.isArray(data)) {\n      return data.map(transformers.snakeToCamel);\n    }\n\n    if (data !== null && typeof data === 'object') {\n      return Object.keys(data).reduce((acc, key) => {\n        const camelKey = key.replace(/_([a-z])/g, (_, letter) => letter.toUpperCase());\n        acc[camelKey] = transformers.snakeToCamel(data[key]);\n        return acc;\n      }, {} as any);\n    }\n\n    return data;\n  },\n\n  // Convert camelCase to snake_case\n  camelToSnake: (data: any): any => {\n    if (Array.isArray(data)) {\n      return data.map(transformers.camelToSnake);\n    }\n\n    if (data !== null && typeof data === 'object') {\n      return Object.keys(data).reduce((acc, key) => {\n        const snakeKey = key.replace(/[A-Z]/g, letter => `_${letter.toLowerCase()}`);\n        acc[snakeKey] = transformers.camelToSnake(data[key]);\n        return acc;\n      }, {} as any);\n    }\n\n    return data;\n  },\n};\n\nexport default createApiClient;"]}