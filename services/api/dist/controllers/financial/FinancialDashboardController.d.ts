import { Request, Response } from 'express';
export declare class FinancialDashboardController {
    getDashboardMetrics(req: Request, res: Response): Promise<void>;
    getRevenueMetrics(req: Request, res: Response): Promise<void>;
    getSubscriptionMetrics(req: Request, res: Response): Promise<void>;
    getCostMetrics(req: Request, res: Response): Promise<void>;
    getProfitLossStatement(req: Request, res: Response): Promise<void>;
    getMRRMetrics(req: Request, res: Response): Promise<void>;
    getARRMetrics(req: Request, res: Response): Promise<void>;
    getRevenueByPlan(req: Request, res: Response): Promise<void>;
    getRevenueByCountry(req: Request, res: Response): Promise<void>;
    getRevenueForecast(req: Request, res: Response): Promise<void>;
    getSubscriptions(req: Request, res: Response): Promise<void>;
    getActiveSubscriptions(req: Request, res: Response): Promise<void>;
    getChurnAnalytics(req: Request, res: Response): Promise<void>;
    getLTVAnalytics(req: Request, res: Response): Promise<void>;
    getCosts(req: Request, res: Response): Promise<void>;
    createCost(req: Request, res: Response): Promise<void>;
    updateCost(req: Request, res: Response): Promise<void>;
    deleteCost(req: Request, res: Response): Promise<void>;
    getCostsByCategory(req: Request, res: Response): Promise<void>;
    getCostOptimizationSuggestions(req: Request, res: Response): Promise<void>;
    getSnapshots(req: Request, res: Response): Promise<void>;
    generateSnapshot(req: Request, res: Response): Promise<void>;
    getLatestSnapshot(req: Request, res: Response): Promise<void>;
    getReports(req: Request, res: Response): Promise<void>;
    createReport(req: Request, res: Response): Promise<void>;
    getReport(req: Request, res: Response): Promise<void>;
    downloadReport(req: Request, res: Response): Promise<void>;
    sendReport(req: Request, res: Response): Promise<void>;
    getCohortAnalysis(req: Request, res: Response): Promise<void>;
    getCohortDetails(req: Request, res: Response): Promise<void>;
    getUnitEconomics(req: Request, res: Response): Promise<void>;
    getCAC(req: Request, res: Response): Promise<void>;
    getLTVtoCACRatio(req: Request, res: Response): Promise<void>;
    getBillingEvents(req: Request, res: Response): Promise<void>;
    getBillingEvent(req: Request, res: Response): Promise<void>;
    getAutomationStatus(req: Request, res: Response): Promise<void>;
    triggerAutomation(req: Request, res: Response): Promise<void>;
    sendTestEmail(req: Request, res: Response): Promise<void>;
    getScheduledJobs(req: Request, res: Response): Promise<void>;
    startJob(req: Request, res: Response): Promise<void>;
    stopJob(req: Request, res: Response): Promise<void>;
}
//# sourceMappingURL=FinancialDashboardController.d.ts.map