version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: upcoach_db
      POSTGRES_USER: upcoach
      POSTGRES_PASSWORD: upcoach_dev_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./src/database/migrations:/docker-entrypoint-initdb.d
    networks:
      - upcoach-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - upcoach-network

  # UpCoach Backend API
  backend:
    build: 
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      PORT: 3001
      DATABASE_URL: postgresql://upcoach:upcoach_dev_password@postgres:5432/upcoach_db
      REDIS_URL: redis://redis:6379
      JWT_SECRET: development-jwt-secret-key-change-in-production-minimum-32-chars
      JWT_REFRESH_SECRET: development-refresh-secret-key-change-in-production-minimum-32-chars
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      CORS_ORIGINS: http://localhost:3000,http://localhost:3002,http://localhost:5173
    depends_on:
      - postgres
      - redis
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - upcoach-network
    command: npm run dev

  # pgAdmin (Database Management UI)
  pgadmin:
    image: dpage/pgadmin4:latest
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@upcoach.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - upcoach-network

  # Redis Commander (Redis Management UI)
  redis-commander:
    image: rediscommander/redis-commander:latest
    restart: unless-stopped
    environment:
      REDIS_HOSTS: local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - upcoach-network

volumes:
  postgres_data:
  redis_data:

networks:
  upcoach-network:
    driver: bridge 