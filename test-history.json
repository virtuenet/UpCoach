[
  {
    "timestamp": "2025-07-27T12:09:49.624Z",
    "landing": {},
    "backend": {},
    "performance": {},
    "coverage": {}
  },
  {
    "timestamp": "2025-07-27T12:11:13.613Z",
    "landing": {
      "success": true,
      "startTime": 1753618185799,
      "endTime": 1753618230799,
      "numTotalTests": 47,
      "numPassedTests": 47,
      "numFailedTests": 0,
      "numPendingTests": 0,
      "testResults": [
        {
          "name": "Hero.test.tsx",
          "status": "passed",
          "numPassingTests": 16,
          "numFailingTests": 0,
          "numPendingTests": 0,
          "numTotalTests": 16
        },
        {
          "name": "LeadCaptureForm.test.tsx",
          "status": "passed",
          "numPassingTests": 14,
          "numFailingTests": 0,
          "numPendingTests": 0,
          "numTotalTests": 14
        }
      ]
    },
    "backend": {
      "numFailedTestSuites": 9,
      "numFailedTests": 0,
      "numPassedTestSuites": 0,
      "numPassedTests": 0,
      "numPendingTestSuites": 0,
      "numPendingTests": 0,
      "numRuntimeErrorTestSuites": 9,
      "numTodoTests": 0,
      "numTotalTestSuites": 9,
      "numTotalTests": 0,
      "openHandles": [],
      "snapshot": {
        "added": 0,
        "didUpdate": false,
        "failure": false,
        "filesAdded": 0,
        "filesRemoved": 0,
        "filesRemovedList": [],
        "filesUnmatched": 0,
        "filesUpdated": 0,
        "matched": 0,
        "total": 0,
        "unchecked": 0,
        "uncheckedKeysByFile": [],
        "unmatched": 0,
        "updated": 0
      },
      "startTime": 1753618260106,
      "success": false,
      "testResults": [
        {
          "assertionResults": [],
          "coverage": {},
          "endTime": 1753618263411,
          "message": "  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    SyntaxError: /Users/ardisetiadharma/CURSOR Repository/UpCoach/upcoach-project/backend/src/tests/integration/AIIntegration.test.ts: Missing semicolon. (17:15)\n\n      15 |\n      16 | describe('AI Services Integration Tests', () => {\n    > 17 |   let authToken: string;\n         |                ^\n      18 |   let testUser: any;\n      19 |\n      20 |   beforeAll(async () => {\n\n      at constructor (node_modules/@babel/parser/src/parse-error.ts:95:45)\n      at Parser.toParseError [as raise] (node_modules/@babel/parser/src/tokenizer/index.ts:1503:19)\n      at Parser.raise [as semicolon] (node_modules/@babel/parser/src/parser/util.ts:149:10)\n      at Parser.semicolon [as parseVarStatement] (node_modules/@babel/parser/src/parser/statement.ts:1247:10)\n      at Parser.parseVarStatement [as parseStatementContent] (node_modules/@babel/parser/src/parser/statement.ts:607:21)\n      at Parser.parseStatementContent [as parseStatementLike] (node_modules/@babel/parser/src/parser/statement.ts:477:17)\n      at Parser.parseStatementLike [as parseStatementListItem] (node_modules/@babel/parser/src/parser/statement.ts:426:17)\n      at Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (node_modules/@babel/parser/src/parser/statement.ts:1439:16)\n      at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (node_modules/@babel/parser/src/parser/statement.ts:1412:10)\n      at Parser.parseBlockBody [as parseBlock] (node_modules/@babel/parser/src/parser/statement.ts:1380:10)\n      at Parser.parseBlock [as parseFunctionBody] (node_modules/@babel/parser/src/parser/expression.ts:2616:24)\n      at Parser.parseFunctionBody [as parseArrowExpression] (node_modules/@babel/parser/src/parser/expression.ts:2553:10)\n      at Parser.parseArrowExpression [as parseParenAndDistinguishExpression] (node_modules/@babel/parser/src/parser/expression.ts:1837:12)\n      at Parser.parseParenAndDistinguishExpression [as parseExprAtom] (node_modules/@babel/parser/src/parser/expression.ts:1162:21)\n      at Parser.parseExprAtom [as parseExprSubscripts] (node_modules/@babel/parser/src/parser/expression.ts:734:23)\n      at Parser.parseExprSubscripts [as parseUpdate] (node_modules/@babel/parser/src/parser/expression.ts:713:21)\n      at Parser.parseUpdate [as parseMaybeUnary] (node_modules/@babel/parser/src/parser/expression.ts:675:23)\n      at Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (node_modules/@babel/parser/src/parser/expression.ts:409:14)\n      at Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (node_modules/@babel/parser/src/parser/expression.ts:421:23)\n      at Parser.parseExprOps [as parseMaybeConditional] (node_modules/@babel/parser/src/parser/expression.ts:376:23)\n      at Parser.parseMaybeConditional [as parseMaybeAssign] (node_modules/@babel/parser/src/parser/expression.ts:301:21)\n      at parseMaybeAssign (node_modules/@babel/parser/src/parser/expression.ts:257:12)\n      at Parser.callback [as allowInAnd] (node_modules/@babel/parser/src/parser/expression.ts:3192:12)\n      at Parser.allowInAnd [as parseMaybeAssignAllowIn] (node_modules/@babel/parser/src/parser/expression.ts:256:17)\n      at Parser.parseMaybeAssignAllowIn [as parseMaybeAssignAllowInOrVoidPattern] (node_modules/@babel/parser/src/parser/expression.ts:3306:17)\n      at Parser.parseMaybeAssignAllowInOrVoidPattern [as parseExprListItem] (node_modules/@babel/parser/src/parser/expression.ts:2788:18)\n      at Parser.parseExprListItem [as parseCallExpressionArguments] (node_modules/@babel/parser/src/parser/expression.ts:1034:14)\n      at Parser.parseCallExpressionArguments [as parseCoverCallAndAsyncArrowHead] (node_modules/@babel/parser/src/parser/expression.ts:914:29)\n      at Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (node_modules/@babel/parser/src/parser/expression.ts:796:19)\n      at Parser.parseSubscript [as parseSubscripts] (node_modules/@babel/parser/src/parser/expression.ts:755:19)\n      at Parser.parseSubscripts [as parseExprSubscripts] (node_modules/@babel/parser/src/parser/expression.ts:740:17)\n      at Parser.parseExprSubscripts [as parseUpdate] (node_modules/@babel/parser/src/parser/expression.ts:713:21)\n      at Parser.parseUpdate [as parseMaybeUnary] (node_modules/@babel/parser/src/parser/expression.ts:675:23)\n      at Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (node_modules/@babel/parser/src/parser/expression.ts:409:14)\n      at Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (node_modules/@babel/parser/src/parser/expression.ts:421:23)\n      at Parser.parseExprOps [as parseMaybeConditional] (node_modules/@babel/parser/src/parser/expression.ts:376:23)\n      at Parser.parseMaybeConditional [as parseMaybeAssign] (node_modules/@babel/parser/src/parser/expression.ts:301:21)\n      at Parser.parseMaybeAssign [as parseExpressionBase] (node_modules/@babel/parser/src/parser/expression.ts:226:23)\n      at parseExpressionBase (node_modules/@babel/parser/src/parser/expression.ts:217:39)\n      at Parser.callback [as allowInAnd] (node_modules/@babel/parser/src/parser/expression.ts:3187:16)\n      at Parser.allowInAnd [as parseExpression] (node_modules/@babel/parser/src/parser/expression.ts:217:17)\n      at Parser.parseExpression [as parseStatementContent] (node_modules/@babel/parser/src/parser/statement.ts:683:23)\n      at Parser.parseStatementContent [as parseStatementLike] (node_modules/@babel/parser/src/parser/statement.ts:477:17)\n      at Parser.parseStatementLike [as parseModuleItem] (node_modules/@babel/parser/src/parser/statement.ts:414:17)\n      at Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (node_modules/@babel/parser/src/parser/statement.ts:1438:16)\n      at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (node_modules/@babel/parser/src/parser/statement.ts:1412:10)\n      at Parser.parseBlockBody [as parseProgram] (node_modules/@babel/parser/src/parser/statement.ts:229:10)\n      at Parser.parseProgram [as parseTopLevel] (node_modules/@babel/parser/src/parser/statement.ts:203:25)\n      at Parser.parseTopLevel [as parse] (node_modules/@babel/parser/src/parser/index.ts:93:10)\n      at parse (node_modules/@babel/parser/src/index.ts:92:38)\n      at parser (node_modules/@babel/core/src/parser/index.ts:28:19)\n          at parser.next (<anonymous>)\n      at normalizeFile (node_modules/@babel/core/src/transformation/normalize-file.ts:49:24)\n          at normalizeFile.next (<anonymous>)\n      at run (node_modules/@babel/core/src/transformation/index.ts:40:36)\n          at run.next (<anonymous>)\n      at transform (node_modules/@babel/core/src/transform.ts:29:20)\n          at transform.next (<anonymous>)\n      at evaluateSync (node_modules/gensync/index.js:251:28)\n      at sync (node_modules/gensync/index.js:89:14)\n      at fn (node_modules/@babel/core/src/errors/rewrite-stack-trace.ts:99:14)\n      at transformSync (node_modules/@babel/core/src/transform.ts:66:52)\n      at ScriptTransformer.transformSource (node_modules/@jest/transform/build/ScriptTransformer.js:545:31)\n      at ScriptTransformer._transformAndBuildScript (node_modules/@jest/transform/build/ScriptTransformer.js:674:40)\n      at ScriptTransformer.transform (node_modules/@jest/transform/build/ScriptTransformer.js:726:19)\n",
          "name": "/Users/ardisetiadharma/CURSOR Repository/UpCoach/upcoach-project/backend/src/tests/integration/AIIntegration.test.ts",
          "startTime": 1753618263411,
          "status": "failed",
          "summary": ""
        },
        {
          "assertionResults": [],
          "coverage": {},
          "endTime": 1753618263411,
          "message": "  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    SyntaxError: /Users/ardisetiadharma/CURSOR Repository/UpCoach/upcoach-project/backend/src/__tests__/services/CoachIntelligenceService.test.ts: Missing semicolon. (16:37)\n\n      14 | jest.mock('../../models/personality/UserAvatarPreference');\n      15 |\n    > 16 | const MockedCoachMemory = CoachMemory as jest.MockedClass<typeof CoachMemory>;\n         |                                      ^\n      17 | const MockedUserAnalytics = UserAnalytics as jest.MockedClass<typeof UserAnalytics>;\n      18 | const MockedKpiTracker = KpiTracker as jest.MockedClass<typeof KpiTracker>;\n      19 | const MockedAvatar = Avatar as jest.MockedClass<typeof Avatar>;\n\n      at constructor (node_modules/@babel/parser/src/parse-error.ts:95:45)\n      at Parser.toParseError [as raise] (node_modules/@babel/parser/src/tokenizer/index.ts:1503:19)\n      at Parser.raise [as semicolon] (node_modules/@babel/parser/src/parser/util.ts:149:10)\n      at Parser.semicolon [as parseVarStatement] (node_modules/@babel/parser/src/parser/statement.ts:1247:10)\n      at Parser.parseVarStatement [as parseStatementContent] (node_modules/@babel/parser/src/parser/statement.ts:607:21)\n      at Parser.parseStatementContent [as parseStatementLike] (node_modules/@babel/parser/src/parser/statement.ts:477:17)\n      at Parser.parseStatementLike [as parseModuleItem] (node_modules/@babel/parser/src/parser/statement.ts:414:17)\n      at Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (node_modules/@babel/parser/src/parser/statement.ts:1438:16)\n      at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (node_modules/@babel/parser/src/parser/statement.ts:1412:10)\n      at Parser.parseBlockBody [as parseProgram] (node_modules/@babel/parser/src/parser/statement.ts:229:10)\n      at Parser.parseProgram [as parseTopLevel] (node_modules/@babel/parser/src/parser/statement.ts:203:25)\n      at Parser.parseTopLevel [as parse] (node_modules/@babel/parser/src/parser/index.ts:93:10)\n      at parse (node_modules/@babel/parser/src/index.ts:92:38)\n      at parser (node_modules/@babel/core/src/parser/index.ts:28:19)\n          at parser.next (<anonymous>)\n      at normalizeFile (node_modules/@babel/core/src/transformation/normalize-file.ts:49:24)\n          at normalizeFile.next (<anonymous>)\n      at run (node_modules/@babel/core/src/transformation/index.ts:40:36)\n          at run.next (<anonymous>)\n      at transform (node_modules/@babel/core/src/transform.ts:29:20)\n          at transform.next (<anonymous>)\n      at evaluateSync (node_modules/gensync/index.js:251:28)\n      at sync (node_modules/gensync/index.js:89:14)\n      at fn (node_modules/@babel/core/src/errors/rewrite-stack-trace.ts:99:14)\n      at transformSync (node_modules/@babel/core/src/transform.ts:66:52)\n      at ScriptTransformer.transformSource (node_modules/@jest/transform/build/ScriptTransformer.js:545:31)\n      at ScriptTransformer._transformAndBuildScript (node_modules/@jest/transform/build/ScriptTransformer.js:674:40)\n      at ScriptTransformer.transform (node_modules/@jest/transform/build/ScriptTransformer.js:726:19)\n",
          "name": "/Users/ardisetiadharma/CURSOR Repository/UpCoach/upcoach-project/backend/src/__tests__/services/CoachIntelligenceService.test.ts",
          "startTime": 1753618263411,
          "status": "failed",
          "summary": ""
        },
        {
          "assertionResults": [],
          "coverage": {},
          "endTime": 1753618263411,
          "message": "  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    SyntaxError: /Users/ardisetiadharma/CURSOR Repository/UpCoach/upcoach-project/backend/src/tests/services/ai/AIService.test.ts: Missing semicolon. (14:15)\n\n      12 |\n      13 | describe('AIService', () => {\n    > 14 |   let aiService: AIService;\n         |                ^\n      15 |   let mockOpenAI: jest.Mocked<OpenAI>;\n      16 |   let mockAnthropic: jest.Mocked<Anthropic>;\n      17 |   let mockPersonalityEngine: jest.Mocked<PersonalityEngine>;\n\n      at constructor (node_modules/@babel/parser/src/parse-error.ts:95:45)\n      at Parser.toParseError [as raise] (node_modules/@babel/parser/src/tokenizer/index.ts:1503:19)\n      at Parser.raise [as semicolon] (node_modules/@babel/parser/src/parser/util.ts:149:10)\n      at Parser.semicolon [as parseVarStatement] (node_modules/@babel/parser/src/parser/statement.ts:1247:10)\n      at Parser.parseVarStatement [as parseStatementContent] (node_modules/@babel/parser/src/parser/statement.ts:607:21)\n      at Parser.parseStatementContent [as parseStatementLike] (node_modules/@babel/parser/src/parser/statement.ts:477:17)\n      at Parser.parseStatementLike [as parseStatementListItem] (node_modules/@babel/parser/src/parser/statement.ts:426:17)\n      at Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (node_modules/@babel/parser/src/parser/statement.ts:1439:16)\n      at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (node_modules/@babel/parser/src/parser/statement.ts:1412:10)\n      at Parser.parseBlockBody [as parseBlock] (node_modules/@babel/parser/src/parser/statement.ts:1380:10)\n      at Parser.parseBlock [as parseFunctionBody] (node_modules/@babel/parser/src/parser/expression.ts:2616:24)\n      at Parser.parseFunctionBody [as parseArrowExpression] (node_modules/@babel/parser/src/parser/expression.ts:2553:10)\n      at Parser.parseArrowExpression [as parseParenAndDistinguishExpression] (node_modules/@babel/parser/src/parser/expression.ts:1837:12)\n      at Parser.parseParenAndDistinguishExpression [as parseExprAtom] (node_modules/@babel/parser/src/parser/expression.ts:1162:21)\n      at Parser.parseExprAtom [as parseExprSubscripts] (node_modules/@babel/parser/src/parser/expression.ts:734:23)\n      at Parser.parseExprSubscripts [as parseUpdate] (node_modules/@babel/parser/src/parser/expression.ts:713:21)\n      at Parser.parseUpdate [as parseMaybeUnary] (node_modules/@babel/parser/src/parser/expression.ts:675:23)\n      at Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (node_modules/@babel/parser/src/parser/expression.ts:409:14)\n      at Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (node_modules/@babel/parser/src/parser/expression.ts:421:23)\n      at Parser.parseExprOps [as parseMaybeConditional] (node_modules/@babel/parser/src/parser/expression.ts:376:23)\n      at Parser.parseMaybeConditional [as parseMaybeAssign] (node_modules/@babel/parser/src/parser/expression.ts:301:21)\n      at parseMaybeAssign (node_modules/@babel/parser/src/parser/expression.ts:257:12)\n      at Parser.callback [as allowInAnd] (node_modules/@babel/parser/src/parser/expression.ts:3192:12)\n      at Parser.allowInAnd [as parseMaybeAssignAllowIn] (node_modules/@babel/parser/src/parser/expression.ts:256:17)\n      at Parser.parseMaybeAssignAllowIn [as parseMaybeAssignAllowInOrVoidPattern] (node_modules/@babel/parser/src/parser/expression.ts:3306:17)\n      at Parser.parseMaybeAssignAllowInOrVoidPattern [as parseExprListItem] (node_modules/@babel/parser/src/parser/expression.ts:2788:18)\n      at Parser.parseExprListItem [as parseCallExpressionArguments] (node_modules/@babel/parser/src/parser/expression.ts:1034:14)\n      at Parser.parseCallExpressionArguments [as parseCoverCallAndAsyncArrowHead] (node_modules/@babel/parser/src/parser/expression.ts:914:29)\n      at Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (node_modules/@babel/parser/src/parser/expression.ts:796:19)\n      at Parser.parseSubscript [as parseSubscripts] (node_modules/@babel/parser/src/parser/expression.ts:755:19)\n      at Parser.parseSubscripts [as parseExprSubscripts] (node_modules/@babel/parser/src/parser/expression.ts:740:17)\n      at Parser.parseExprSubscripts [as parseUpdate] (node_modules/@babel/parser/src/parser/expression.ts:713:21)\n      at Parser.parseUpdate [as parseMaybeUnary] (node_modules/@babel/parser/src/parser/expression.ts:675:23)\n      at Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (node_modules/@babel/parser/src/parser/expression.ts:409:14)\n      at Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (node_modules/@babel/parser/src/parser/expression.ts:421:23)\n      at Parser.parseExprOps [as parseMaybeConditional] (node_modules/@babel/parser/src/parser/expression.ts:376:23)\n      at Parser.parseMaybeConditional [as parseMaybeAssign] (node_modules/@babel/parser/src/parser/expression.ts:301:21)\n      at Parser.parseMaybeAssign [as parseExpressionBase] (node_modules/@babel/parser/src/parser/expression.ts:226:23)\n      at parseExpressionBase (node_modules/@babel/parser/src/parser/expression.ts:217:39)\n      at Parser.callback [as allowInAnd] (node_modules/@babel/parser/src/parser/expression.ts:3187:16)\n      at Parser.allowInAnd [as parseExpression] (node_modules/@babel/parser/src/parser/expression.ts:217:17)\n      at Parser.parseExpression [as parseStatementContent] (node_modules/@babel/parser/src/parser/statement.ts:683:23)\n      at Parser.parseStatementContent [as parseStatementLike] (node_modules/@babel/parser/src/parser/statement.ts:477:17)\n      at Parser.parseStatementLike [as parseModuleItem] (node_modules/@babel/parser/src/parser/statement.ts:414:17)\n      at Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (node_modules/@babel/parser/src/parser/statement.ts:1438:16)\n      at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (node_modules/@babel/parser/src/parser/statement.ts:1412:10)\n      at Parser.parseBlockBody [as parseProgram] (node_modules/@babel/parser/src/parser/statement.ts:229:10)\n      at Parser.parseProgram [as parseTopLevel] (node_modules/@babel/parser/src/parser/statement.ts:203:25)\n      at Parser.parseTopLevel [as parse] (node_modules/@babel/parser/src/parser/index.ts:93:10)\n      at parse (node_modules/@babel/parser/src/index.ts:92:38)\n      at parser (node_modules/@babel/core/src/parser/index.ts:28:19)\n          at parser.next (<anonymous>)\n      at normalizeFile (node_modules/@babel/core/src/transformation/normalize-file.ts:49:24)\n          at normalizeFile.next (<anonymous>)\n      at run (node_modules/@babel/core/src/transformation/index.ts:40:36)\n          at run.next (<anonymous>)\n      at transform (node_modules/@babel/core/src/transform.ts:29:20)\n          at transform.next (<anonymous>)\n      at evaluateSync (node_modules/gensync/index.js:251:28)\n      at sync (node_modules/gensync/index.js:89:14)\n      at fn (node_modules/@babel/core/src/errors/rewrite-stack-trace.ts:99:14)\n      at transformSync (node_modules/@babel/core/src/transform.ts:66:52)\n      at ScriptTransformer.transformSource (node_modules/@jest/transform/build/ScriptTransformer.js:545:31)\n      at ScriptTransformer._transformAndBuildScript (node_modules/@jest/transform/build/ScriptTransformer.js:674:40)\n      at ScriptTransformer.transform (node_modules/@jest/transform/build/ScriptTransformer.js:726:19)\n",
          "name": "/Users/ardisetiadharma/CURSOR Repository/UpCoach/upcoach-project/backend/src/tests/services/ai/AIService.test.ts",
          "startTime": 1753618263411,
          "status": "failed",
          "summary": ""
        },
        {
          "assertionResults": [],
          "coverage": {},
          "endTime": 1753618263411,
          "message": "  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    SyntaxError: /Users/ardisetiadharma/CURSOR Repository/UpCoach/upcoach-project/backend/tests/ab-testing/ABTestingService.test.ts: Missing semicolon. (14:22)\n\n      12 |\n      13 | describe('ABTestingService', () => {\n    > 14 |   let abTestingService: ABTestingService;\n         |                       ^\n      15 |   let mockExperiment: any;\n      16 |   let mockUser: any;\n      17 |\n\n      at constructor (node_modules/@babel/parser/src/parse-error.ts:95:45)\n      at Parser.toParseError [as raise] (node_modules/@babel/parser/src/tokenizer/index.ts:1503:19)\n      at Parser.raise [as semicolon] (node_modules/@babel/parser/src/parser/util.ts:149:10)\n      at Parser.semicolon [as parseVarStatement] (node_modules/@babel/parser/src/parser/statement.ts:1247:10)\n      at Parser.parseVarStatement [as parseStatementContent] (node_modules/@babel/parser/src/parser/statement.ts:607:21)\n      at Parser.parseStatementContent [as parseStatementLike] (node_modules/@babel/parser/src/parser/statement.ts:477:17)\n      at Parser.parseStatementLike [as parseStatementListItem] (node_modules/@babel/parser/src/parser/statement.ts:426:17)\n      at Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (node_modules/@babel/parser/src/parser/statement.ts:1439:16)\n      at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (node_modules/@babel/parser/src/parser/statement.ts:1412:10)\n      at Parser.parseBlockBody [as parseBlock] (node_modules/@babel/parser/src/parser/statement.ts:1380:10)\n      at Parser.parseBlock [as parseFunctionBody] (node_modules/@babel/parser/src/parser/expression.ts:2616:24)\n      at Parser.parseFunctionBody [as parseArrowExpression] (node_modules/@babel/parser/src/parser/expression.ts:2553:10)\n      at Parser.parseArrowExpression [as parseParenAndDistinguishExpression] (node_modules/@babel/parser/src/parser/expression.ts:1837:12)\n      at Parser.parseParenAndDistinguishExpression [as parseExprAtom] (node_modules/@babel/parser/src/parser/expression.ts:1162:21)\n      at Parser.parseExprAtom [as parseExprSubscripts] (node_modules/@babel/parser/src/parser/expression.ts:734:23)\n      at Parser.parseExprSubscripts [as parseUpdate] (node_modules/@babel/parser/src/parser/expression.ts:713:21)\n      at Parser.parseUpdate [as parseMaybeUnary] (node_modules/@babel/parser/src/parser/expression.ts:675:23)\n      at Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (node_modules/@babel/parser/src/parser/expression.ts:409:14)\n      at Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (node_modules/@babel/parser/src/parser/expression.ts:421:23)\n      at Parser.parseExprOps [as parseMaybeConditional] (node_modules/@babel/parser/src/parser/expression.ts:376:23)\n      at Parser.parseMaybeConditional [as parseMaybeAssign] (node_modules/@babel/parser/src/parser/expression.ts:301:21)\n      at parseMaybeAssign (node_modules/@babel/parser/src/parser/expression.ts:257:12)\n      at Parser.callback [as allowInAnd] (node_modules/@babel/parser/src/parser/expression.ts:3192:12)\n      at Parser.allowInAnd [as parseMaybeAssignAllowIn] (node_modules/@babel/parser/src/parser/expression.ts:256:17)\n      at Parser.parseMaybeAssignAllowIn [as parseMaybeAssignAllowInOrVoidPattern] (node_modules/@babel/parser/src/parser/expression.ts:3306:17)\n      at Parser.parseMaybeAssignAllowInOrVoidPattern [as parseExprListItem] (node_modules/@babel/parser/src/parser/expression.ts:2788:18)\n      at Parser.parseExprListItem [as parseCallExpressionArguments] (node_modules/@babel/parser/src/parser/expression.ts:1034:14)\n      at Parser.parseCallExpressionArguments [as parseCoverCallAndAsyncArrowHead] (node_modules/@babel/parser/src/parser/expression.ts:914:29)\n      at Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (node_modules/@babel/parser/src/parser/expression.ts:796:19)\n      at Parser.parseSubscript [as parseSubscripts] (node_modules/@babel/parser/src/parser/expression.ts:755:19)\n      at Parser.parseSubscripts [as parseExprSubscripts] (node_modules/@babel/parser/src/parser/expression.ts:740:17)\n      at Parser.parseExprSubscripts [as parseUpdate] (node_modules/@babel/parser/src/parser/expression.ts:713:21)\n      at Parser.parseUpdate [as parseMaybeUnary] (node_modules/@babel/parser/src/parser/expression.ts:675:23)\n      at Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (node_modules/@babel/parser/src/parser/expression.ts:409:14)\n      at Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (node_modules/@babel/parser/src/parser/expression.ts:421:23)\n      at Parser.parseExprOps [as parseMaybeConditional] (node_modules/@babel/parser/src/parser/expression.ts:376:23)\n      at Parser.parseMaybeConditional [as parseMaybeAssign] (node_modules/@babel/parser/src/parser/expression.ts:301:21)\n      at Parser.parseMaybeAssign [as parseExpressionBase] (node_modules/@babel/parser/src/parser/expression.ts:226:23)\n      at parseExpressionBase (node_modules/@babel/parser/src/parser/expression.ts:217:39)\n      at Parser.callback [as allowInAnd] (node_modules/@babel/parser/src/parser/expression.ts:3187:16)\n      at Parser.allowInAnd [as parseExpression] (node_modules/@babel/parser/src/parser/expression.ts:217:17)\n      at Parser.parseExpression [as parseStatementContent] (node_modules/@babel/parser/src/parser/statement.ts:683:23)\n      at Parser.parseStatementContent [as parseStatementLike] (node_modules/@babel/parser/src/parser/statement.ts:477:17)\n      at Parser.parseStatementLike [as parseModuleItem] (node_modules/@babel/parser/src/parser/statement.ts:414:17)\n      at Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (node_modules/@babel/parser/src/parser/statement.ts:1438:16)\n      at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (node_modules/@babel/parser/src/parser/statement.ts:1412:10)\n      at Parser.parseBlockBody [as parseProgram] (node_modules/@babel/parser/src/parser/statement.ts:229:10)\n      at Parser.parseProgram [as parseTopLevel] (node_modules/@babel/parser/src/parser/statement.ts:203:25)\n      at Parser.parseTopLevel [as parse] (node_modules/@babel/parser/src/parser/index.ts:93:10)\n      at parse (node_modules/@babel/parser/src/index.ts:92:38)\n      at parser (node_modules/@babel/core/src/parser/index.ts:28:19)\n          at parser.next (<anonymous>)\n      at normalizeFile (node_modules/@babel/core/src/transformation/normalize-file.ts:49:24)\n          at normalizeFile.next (<anonymous>)\n      at run (node_modules/@babel/core/src/transformation/index.ts:40:36)\n          at run.next (<anonymous>)\n      at transform (node_modules/@babel/core/src/transform.ts:29:20)\n          at transform.next (<anonymous>)\n      at evaluateSync (node_modules/gensync/index.js:251:28)\n      at sync (node_modules/gensync/index.js:89:14)\n      at fn (node_modules/@babel/core/src/errors/rewrite-stack-trace.ts:99:14)\n      at transformSync (node_modules/@babel/core/src/transform.ts:66:52)\n      at ScriptTransformer.transformSource (node_modules/@jest/transform/build/ScriptTransformer.js:545:31)\n      at ScriptTransformer._transformAndBuildScript (node_modules/@jest/transform/build/ScriptTransformer.js:674:40)\n      at ScriptTransformer.transform (node_modules/@jest/transform/build/ScriptTransformer.js:726:19)\n",
          "name": "/Users/ardisetiadharma/CURSOR Repository/UpCoach/upcoach-project/backend/tests/ab-testing/ABTestingService.test.ts",
          "startTime": 1753618263411,
          "status": "failed",
          "summary": ""
        },
        {
          "assertionResults": [],
          "coverage": {},
          "endTime": 1753618263411,
          "message": "  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    SyntaxError: /Users/ardisetiadharma/CURSOR Repository/UpCoach/upcoach-project/backend/src/tests/services/ai/UserProfilingService.test.ts: Missing semicolon. (18:26)\n\n      16 |\n      17 | describe('UserProfilingService', () => {\n    > 18 |   let userProfilingService: UserProfilingService;\n         |                           ^\n      19 |\n      20 |   beforeEach(() => {\n      21 |     jest.clearAllMocks();\n\n      at constructor (node_modules/@babel/parser/src/parse-error.ts:95:45)\n      at Parser.toParseError [as raise] (node_modules/@babel/parser/src/tokenizer/index.ts:1503:19)\n      at Parser.raise [as semicolon] (node_modules/@babel/parser/src/parser/util.ts:149:10)\n      at Parser.semicolon [as parseVarStatement] (node_modules/@babel/parser/src/parser/statement.ts:1247:10)\n      at Parser.parseVarStatement [as parseStatementContent] (node_modules/@babel/parser/src/parser/statement.ts:607:21)\n      at Parser.parseStatementContent [as parseStatementLike] (node_modules/@babel/parser/src/parser/statement.ts:477:17)\n      at Parser.parseStatementLike [as parseStatementListItem] (node_modules/@babel/parser/src/parser/statement.ts:426:17)\n      at Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (node_modules/@babel/parser/src/parser/statement.ts:1439:16)\n      at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (node_modules/@babel/parser/src/parser/statement.ts:1412:10)\n      at Parser.parseBlockBody [as parseBlock] (node_modules/@babel/parser/src/parser/statement.ts:1380:10)\n      at Parser.parseBlock [as parseFunctionBody] (node_modules/@babel/parser/src/parser/expression.ts:2616:24)\n      at Parser.parseFunctionBody [as parseArrowExpression] (node_modules/@babel/parser/src/parser/expression.ts:2553:10)\n      at Parser.parseArrowExpression [as parseParenAndDistinguishExpression] (node_modules/@babel/parser/src/parser/expression.ts:1837:12)\n      at Parser.parseParenAndDistinguishExpression [as parseExprAtom] (node_modules/@babel/parser/src/parser/expression.ts:1162:21)\n      at Parser.parseExprAtom [as parseExprSubscripts] (node_modules/@babel/parser/src/parser/expression.ts:734:23)\n      at Parser.parseExprSubscripts [as parseUpdate] (node_modules/@babel/parser/src/parser/expression.ts:713:21)\n      at Parser.parseUpdate [as parseMaybeUnary] (node_modules/@babel/parser/src/parser/expression.ts:675:23)\n      at Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (node_modules/@babel/parser/src/parser/expression.ts:409:14)\n      at Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (node_modules/@babel/parser/src/parser/expression.ts:421:23)\n      at Parser.parseExprOps [as parseMaybeConditional] (node_modules/@babel/parser/src/parser/expression.ts:376:23)\n      at Parser.parseMaybeConditional [as parseMaybeAssign] (node_modules/@babel/parser/src/parser/expression.ts:301:21)\n      at parseMaybeAssign (node_modules/@babel/parser/src/parser/expression.ts:257:12)\n      at Parser.callback [as allowInAnd] (node_modules/@babel/parser/src/parser/expression.ts:3192:12)\n      at Parser.allowInAnd [as parseMaybeAssignAllowIn] (node_modules/@babel/parser/src/parser/expression.ts:256:17)\n      at Parser.parseMaybeAssignAllowIn [as parseMaybeAssignAllowInOrVoidPattern] (node_modules/@babel/parser/src/parser/expression.ts:3306:17)\n      at Parser.parseMaybeAssignAllowInOrVoidPattern [as parseExprListItem] (node_modules/@babel/parser/src/parser/expression.ts:2788:18)\n      at Parser.parseExprListItem [as parseCallExpressionArguments] (node_modules/@babel/parser/src/parser/expression.ts:1034:14)\n      at Parser.parseCallExpressionArguments [as parseCoverCallAndAsyncArrowHead] (node_modules/@babel/parser/src/parser/expression.ts:914:29)\n      at Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (node_modules/@babel/parser/src/parser/expression.ts:796:19)\n      at Parser.parseSubscript [as parseSubscripts] (node_modules/@babel/parser/src/parser/expression.ts:755:19)\n      at Parser.parseSubscripts [as parseExprSubscripts] (node_modules/@babel/parser/src/parser/expression.ts:740:17)\n      at Parser.parseExprSubscripts [as parseUpdate] (node_modules/@babel/parser/src/parser/expression.ts:713:21)\n      at Parser.parseUpdate [as parseMaybeUnary] (node_modules/@babel/parser/src/parser/expression.ts:675:23)\n      at Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (node_modules/@babel/parser/src/parser/expression.ts:409:14)\n      at Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (node_modules/@babel/parser/src/parser/expression.ts:421:23)\n      at Parser.parseExprOps [as parseMaybeConditional] (node_modules/@babel/parser/src/parser/expression.ts:376:23)\n      at Parser.parseMaybeConditional [as parseMaybeAssign] (node_modules/@babel/parser/src/parser/expression.ts:301:21)\n      at Parser.parseMaybeAssign [as parseExpressionBase] (node_modules/@babel/parser/src/parser/expression.ts:226:23)\n      at parseExpressionBase (node_modules/@babel/parser/src/parser/expression.ts:217:39)\n      at Parser.callback [as allowInAnd] (node_modules/@babel/parser/src/parser/expression.ts:3187:16)\n      at Parser.allowInAnd [as parseExpression] (node_modules/@babel/parser/src/parser/expression.ts:217:17)\n      at Parser.parseExpression [as parseStatementContent] (node_modules/@babel/parser/src/parser/statement.ts:683:23)\n      at Parser.parseStatementContent [as parseStatementLike] (node_modules/@babel/parser/src/parser/statement.ts:477:17)\n      at Parser.parseStatementLike [as parseModuleItem] (node_modules/@babel/parser/src/parser/statement.ts:414:17)\n      at Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (node_modules/@babel/parser/src/parser/statement.ts:1438:16)\n      at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (node_modules/@babel/parser/src/parser/statement.ts:1412:10)\n      at Parser.parseBlockBody [as parseProgram] (node_modules/@babel/parser/src/parser/statement.ts:229:10)\n      at Parser.parseProgram [as parseTopLevel] (node_modules/@babel/parser/src/parser/statement.ts:203:25)\n      at Parser.parseTopLevel [as parse] (node_modules/@babel/parser/src/parser/index.ts:93:10)\n      at parse (node_modules/@babel/parser/src/index.ts:92:38)\n      at parser (node_modules/@babel/core/src/parser/index.ts:28:19)\n          at parser.next (<anonymous>)\n      at normalizeFile (node_modules/@babel/core/src/transformation/normalize-file.ts:49:24)\n          at normalizeFile.next (<anonymous>)\n      at run (node_modules/@babel/core/src/transformation/index.ts:40:36)\n          at run.next (<anonymous>)\n      at transform (node_modules/@babel/core/src/transform.ts:29:20)\n          at transform.next (<anonymous>)\n      at evaluateSync (node_modules/gensync/index.js:251:28)\n      at sync (node_modules/gensync/index.js:89:14)\n      at fn (node_modules/@babel/core/src/errors/rewrite-stack-trace.ts:99:14)\n      at transformSync (node_modules/@babel/core/src/transform.ts:66:52)\n      at ScriptTransformer.transformSource (node_modules/@jest/transform/build/ScriptTransformer.js:545:31)\n      at ScriptTransformer._transformAndBuildScript (node_modules/@jest/transform/build/ScriptTransformer.js:674:40)\n      at ScriptTransformer.transform (node_modules/@jest/transform/build/ScriptTransformer.js:726:19)\n",
          "name": "/Users/ardisetiadharma/CURSOR Repository/UpCoach/upcoach-project/backend/src/tests/services/ai/UserProfilingService.test.ts",
          "startTime": 1753618263411,
          "status": "failed",
          "summary": ""
        },
        {
          "assertionResults": [],
          "coverage": {},
          "endTime": 1753618263411,
          "message": "  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    SyntaxError: /Users/ardisetiadharma/CURSOR Repository/UpCoach/upcoach-project/backend/tests/integration/experiments.test.ts: Missing semicolon. (12:15)\n\n      10 |\n      11 | describe('Experiments API Integration Tests', () => {\n    > 12 |   let adminUser: any;\n         |                ^\n      13 |   let regularUser: any;\n      14 |   let adminToken: string;\n      15 |   let userToken: string;\n\n      at constructor (node_modules/@babel/parser/src/parse-error.ts:95:45)\n      at Parser.toParseError [as raise] (node_modules/@babel/parser/src/tokenizer/index.ts:1503:19)\n      at Parser.raise [as semicolon] (node_modules/@babel/parser/src/parser/util.ts:149:10)\n      at Parser.semicolon [as parseVarStatement] (node_modules/@babel/parser/src/parser/statement.ts:1247:10)\n      at Parser.parseVarStatement [as parseStatementContent] (node_modules/@babel/parser/src/parser/statement.ts:607:21)\n      at Parser.parseStatementContent [as parseStatementLike] (node_modules/@babel/parser/src/parser/statement.ts:477:17)\n      at Parser.parseStatementLike [as parseStatementListItem] (node_modules/@babel/parser/src/parser/statement.ts:426:17)\n      at Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (node_modules/@babel/parser/src/parser/statement.ts:1439:16)\n      at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (node_modules/@babel/parser/src/parser/statement.ts:1412:10)\n      at Parser.parseBlockBody [as parseBlock] (node_modules/@babel/parser/src/parser/statement.ts:1380:10)\n      at Parser.parseBlock [as parseFunctionBody] (node_modules/@babel/parser/src/parser/expression.ts:2616:24)\n      at Parser.parseFunctionBody [as parseArrowExpression] (node_modules/@babel/parser/src/parser/expression.ts:2553:10)\n      at Parser.parseArrowExpression [as parseParenAndDistinguishExpression] (node_modules/@babel/parser/src/parser/expression.ts:1837:12)\n      at Parser.parseParenAndDistinguishExpression [as parseExprAtom] (node_modules/@babel/parser/src/parser/expression.ts:1162:21)\n      at Parser.parseExprAtom [as parseExprSubscripts] (node_modules/@babel/parser/src/parser/expression.ts:734:23)\n      at Parser.parseExprSubscripts [as parseUpdate] (node_modules/@babel/parser/src/parser/expression.ts:713:21)\n      at Parser.parseUpdate [as parseMaybeUnary] (node_modules/@babel/parser/src/parser/expression.ts:675:23)\n      at Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (node_modules/@babel/parser/src/parser/expression.ts:409:14)\n      at Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (node_modules/@babel/parser/src/parser/expression.ts:421:23)\n      at Parser.parseExprOps [as parseMaybeConditional] (node_modules/@babel/parser/src/parser/expression.ts:376:23)\n      at Parser.parseMaybeConditional [as parseMaybeAssign] (node_modules/@babel/parser/src/parser/expression.ts:301:21)\n      at parseMaybeAssign (node_modules/@babel/parser/src/parser/expression.ts:257:12)\n      at Parser.callback [as allowInAnd] (node_modules/@babel/parser/src/parser/expression.ts:3192:12)\n      at Parser.allowInAnd [as parseMaybeAssignAllowIn] (node_modules/@babel/parser/src/parser/expression.ts:256:17)\n      at Parser.parseMaybeAssignAllowIn [as parseMaybeAssignAllowInOrVoidPattern] (node_modules/@babel/parser/src/parser/expression.ts:3306:17)\n      at Parser.parseMaybeAssignAllowInOrVoidPattern [as parseExprListItem] (node_modules/@babel/parser/src/parser/expression.ts:2788:18)\n      at Parser.parseExprListItem [as parseCallExpressionArguments] (node_modules/@babel/parser/src/parser/expression.ts:1034:14)\n      at Parser.parseCallExpressionArguments [as parseCoverCallAndAsyncArrowHead] (node_modules/@babel/parser/src/parser/expression.ts:914:29)\n      at Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (node_modules/@babel/parser/src/parser/expression.ts:796:19)\n      at Parser.parseSubscript [as parseSubscripts] (node_modules/@babel/parser/src/parser/expression.ts:755:19)\n      at Parser.parseSubscripts [as parseExprSubscripts] (node_modules/@babel/parser/src/parser/expression.ts:740:17)\n      at Parser.parseExprSubscripts [as parseUpdate] (node_modules/@babel/parser/src/parser/expression.ts:713:21)\n      at Parser.parseUpdate [as parseMaybeUnary] (node_modules/@babel/parser/src/parser/expression.ts:675:23)\n      at Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (node_modules/@babel/parser/src/parser/expression.ts:409:14)\n      at Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (node_modules/@babel/parser/src/parser/expression.ts:421:23)\n      at Parser.parseExprOps [as parseMaybeConditional] (node_modules/@babel/parser/src/parser/expression.ts:376:23)\n      at Parser.parseMaybeConditional [as parseMaybeAssign] (node_modules/@babel/parser/src/parser/expression.ts:301:21)\n      at Parser.parseMaybeAssign [as parseExpressionBase] (node_modules/@babel/parser/src/parser/expression.ts:226:23)\n      at parseExpressionBase (node_modules/@babel/parser/src/parser/expression.ts:217:39)\n      at Parser.callback [as allowInAnd] (node_modules/@babel/parser/src/parser/expression.ts:3187:16)\n      at Parser.allowInAnd [as parseExpression] (node_modules/@babel/parser/src/parser/expression.ts:217:17)\n      at Parser.parseExpression [as parseStatementContent] (node_modules/@babel/parser/src/parser/statement.ts:683:23)\n      at Parser.parseStatementContent [as parseStatementLike] (node_modules/@babel/parser/src/parser/statement.ts:477:17)\n      at Parser.parseStatementLike [as parseModuleItem] (node_modules/@babel/parser/src/parser/statement.ts:414:17)\n      at Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (node_modules/@babel/parser/src/parser/statement.ts:1438:16)\n      at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (node_modules/@babel/parser/src/parser/statement.ts:1412:10)\n      at Parser.parseBlockBody [as parseProgram] (node_modules/@babel/parser/src/parser/statement.ts:229:10)\n      at Parser.parseProgram [as parseTopLevel] (node_modules/@babel/parser/src/parser/statement.ts:203:25)\n      at Parser.parseTopLevel [as parse] (node_modules/@babel/parser/src/parser/index.ts:93:10)\n      at parse (node_modules/@babel/parser/src/index.ts:92:38)\n      at parser (node_modules/@babel/core/src/parser/index.ts:28:19)\n          at parser.next (<anonymous>)\n      at normalizeFile (node_modules/@babel/core/src/transformation/normalize-file.ts:49:24)\n          at normalizeFile.next (<anonymous>)\n      at run (node_modules/@babel/core/src/transformation/index.ts:40:36)\n          at run.next (<anonymous>)\n      at transform (node_modules/@babel/core/src/transform.ts:29:20)\n          at transform.next (<anonymous>)\n      at evaluateSync (node_modules/gensync/index.js:251:28)\n      at sync (node_modules/gensync/index.js:89:14)\n      at fn (node_modules/@babel/core/src/errors/rewrite-stack-trace.ts:99:14)\n      at transformSync (node_modules/@babel/core/src/transform.ts:66:52)\n      at ScriptTransformer.transformSource (node_modules/@jest/transform/build/ScriptTransformer.js:545:31)\n      at ScriptTransformer._transformAndBuildScript (node_modules/@jest/transform/build/ScriptTransformer.js:674:40)\n      at ScriptTransformer.transform (node_modules/@jest/transform/build/ScriptTransformer.js:726:19)\n",
          "name": "/Users/ardisetiadharma/CURSOR Repository/UpCoach/upcoach-project/backend/tests/integration/experiments.test.ts",
          "startTime": 1753618263411,
          "status": "failed",
          "summary": ""
        },
        {
          "assertionResults": [],
          "coverage": {},
          "endTime": 1753618263411,
          "message": "  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    SyntaxError: /Users/ardisetiadharma/CURSOR Repository/UpCoach/upcoach-project/backend/src/tests/services/ai/RecommendationEngine.test.ts: Missing semicolon. (16:26)\n\n      14 |\n      15 | describe('RecommendationEngine', () => {\n    > 16 |   let recommendationEngine: RecommendationEngine;\n         |                           ^\n      17 |   let mockUserProfilingService: jest.Mocked<UserProfilingService>;\n      18 |   let mockAIService: jest.Mocked<AIService>;\n      19 |\n\n      at constructor (node_modules/@babel/parser/src/parse-error.ts:95:45)\n      at Parser.toParseError [as raise] (node_modules/@babel/parser/src/tokenizer/index.ts:1503:19)\n      at Parser.raise [as semicolon] (node_modules/@babel/parser/src/parser/util.ts:149:10)\n      at Parser.semicolon [as parseVarStatement] (node_modules/@babel/parser/src/parser/statement.ts:1247:10)\n      at Parser.parseVarStatement [as parseStatementContent] (node_modules/@babel/parser/src/parser/statement.ts:607:21)\n      at Parser.parseStatementContent [as parseStatementLike] (node_modules/@babel/parser/src/parser/statement.ts:477:17)\n      at Parser.parseStatementLike [as parseStatementListItem] (node_modules/@babel/parser/src/parser/statement.ts:426:17)\n      at Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (node_modules/@babel/parser/src/parser/statement.ts:1439:16)\n      at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (node_modules/@babel/parser/src/parser/statement.ts:1412:10)\n      at Parser.parseBlockBody [as parseBlock] (node_modules/@babel/parser/src/parser/statement.ts:1380:10)\n      at Parser.parseBlock [as parseFunctionBody] (node_modules/@babel/parser/src/parser/expression.ts:2616:24)\n      at Parser.parseFunctionBody [as parseArrowExpression] (node_modules/@babel/parser/src/parser/expression.ts:2553:10)\n      at Parser.parseArrowExpression [as parseParenAndDistinguishExpression] (node_modules/@babel/parser/src/parser/expression.ts:1837:12)\n      at Parser.parseParenAndDistinguishExpression [as parseExprAtom] (node_modules/@babel/parser/src/parser/expression.ts:1162:21)\n      at Parser.parseExprAtom [as parseExprSubscripts] (node_modules/@babel/parser/src/parser/expression.ts:734:23)\n      at Parser.parseExprSubscripts [as parseUpdate] (node_modules/@babel/parser/src/parser/expression.ts:713:21)\n      at Parser.parseUpdate [as parseMaybeUnary] (node_modules/@babel/parser/src/parser/expression.ts:675:23)\n      at Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (node_modules/@babel/parser/src/parser/expression.ts:409:14)\n      at Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (node_modules/@babel/parser/src/parser/expression.ts:421:23)\n      at Parser.parseExprOps [as parseMaybeConditional] (node_modules/@babel/parser/src/parser/expression.ts:376:23)\n      at Parser.parseMaybeConditional [as parseMaybeAssign] (node_modules/@babel/parser/src/parser/expression.ts:301:21)\n      at parseMaybeAssign (node_modules/@babel/parser/src/parser/expression.ts:257:12)\n      at Parser.callback [as allowInAnd] (node_modules/@babel/parser/src/parser/expression.ts:3192:12)\n      at Parser.allowInAnd [as parseMaybeAssignAllowIn] (node_modules/@babel/parser/src/parser/expression.ts:256:17)\n      at Parser.parseMaybeAssignAllowIn [as parseMaybeAssignAllowInOrVoidPattern] (node_modules/@babel/parser/src/parser/expression.ts:3306:17)\n      at Parser.parseMaybeAssignAllowInOrVoidPattern [as parseExprListItem] (node_modules/@babel/parser/src/parser/expression.ts:2788:18)\n      at Parser.parseExprListItem [as parseCallExpressionArguments] (node_modules/@babel/parser/src/parser/expression.ts:1034:14)\n      at Parser.parseCallExpressionArguments [as parseCoverCallAndAsyncArrowHead] (node_modules/@babel/parser/src/parser/expression.ts:914:29)\n      at Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (node_modules/@babel/parser/src/parser/expression.ts:796:19)\n      at Parser.parseSubscript [as parseSubscripts] (node_modules/@babel/parser/src/parser/expression.ts:755:19)\n      at Parser.parseSubscripts [as parseExprSubscripts] (node_modules/@babel/parser/src/parser/expression.ts:740:17)\n      at Parser.parseExprSubscripts [as parseUpdate] (node_modules/@babel/parser/src/parser/expression.ts:713:21)\n      at Parser.parseUpdate [as parseMaybeUnary] (node_modules/@babel/parser/src/parser/expression.ts:675:23)\n      at Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (node_modules/@babel/parser/src/parser/expression.ts:409:14)\n      at Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (node_modules/@babel/parser/src/parser/expression.ts:421:23)\n      at Parser.parseExprOps [as parseMaybeConditional] (node_modules/@babel/parser/src/parser/expression.ts:376:23)\n      at Parser.parseMaybeConditional [as parseMaybeAssign] (node_modules/@babel/parser/src/parser/expression.ts:301:21)\n      at Parser.parseMaybeAssign [as parseExpressionBase] (node_modules/@babel/parser/src/parser/expression.ts:226:23)\n      at parseExpressionBase (node_modules/@babel/parser/src/parser/expression.ts:217:39)\n      at Parser.callback [as allowInAnd] (node_modules/@babel/parser/src/parser/expression.ts:3187:16)\n      at Parser.allowInAnd [as parseExpression] (node_modules/@babel/parser/src/parser/expression.ts:217:17)\n      at Parser.parseExpression [as parseStatementContent] (node_modules/@babel/parser/src/parser/statement.ts:683:23)\n      at Parser.parseStatementContent [as parseStatementLike] (node_modules/@babel/parser/src/parser/statement.ts:477:17)\n      at Parser.parseStatementLike [as parseModuleItem] (node_modules/@babel/parser/src/parser/statement.ts:414:17)\n      at Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (node_modules/@babel/parser/src/parser/statement.ts:1438:16)\n      at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (node_modules/@babel/parser/src/parser/statement.ts:1412:10)\n      at Parser.parseBlockBody [as parseProgram] (node_modules/@babel/parser/src/parser/statement.ts:229:10)\n      at Parser.parseProgram [as parseTopLevel] (node_modules/@babel/parser/src/parser/statement.ts:203:25)\n      at Parser.parseTopLevel [as parse] (node_modules/@babel/parser/src/parser/index.ts:93:10)\n      at parse (node_modules/@babel/parser/src/index.ts:92:38)\n      at parser (node_modules/@babel/core/src/parser/index.ts:28:19)\n          at parser.next (<anonymous>)\n      at normalizeFile (node_modules/@babel/core/src/transformation/normalize-file.ts:49:24)\n          at normalizeFile.next (<anonymous>)\n      at run (node_modules/@babel/core/src/transformation/index.ts:40:36)\n          at run.next (<anonymous>)\n      at transform (node_modules/@babel/core/src/transform.ts:29:20)\n          at transform.next (<anonymous>)\n      at evaluateSync (node_modules/gensync/index.js:251:28)\n      at sync (node_modules/gensync/index.js:89:14)\n      at fn (node_modules/@babel/core/src/errors/rewrite-stack-trace.ts:99:14)\n      at transformSync (node_modules/@babel/core/src/transform.ts:66:52)\n      at ScriptTransformer.transformSource (node_modules/@jest/transform/build/ScriptTransformer.js:545:31)\n      at ScriptTransformer._transformAndBuildScript (node_modules/@jest/transform/build/ScriptTransformer.js:674:40)\n      at ScriptTransformer.transform (node_modules/@jest/transform/build/ScriptTransformer.js:726:19)\n",
          "name": "/Users/ardisetiadharma/CURSOR Repository/UpCoach/upcoach-project/backend/src/tests/services/ai/RecommendationEngine.test.ts",
          "startTime": 1753618263411,
          "status": "failed",
          "summary": ""
        },
        {
          "assertionResults": [],
          "coverage": {},
          "endTime": 1753618263411,
          "message": "  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    SyntaxError: /Users/ardisetiadharma/CURSOR Repository/UpCoach/upcoach-project/backend/src/tests/scenarios/AIScenarios.test.ts: Missing semicolon. (19:14)\n\n      17 |\n      18 | describe('AI Coaching Scenarios', () => {\n    > 19 |   let testUser: any;\n         |               ^\n      20 |   let aiService: AIService;\n      21 |   let userProfilingService: UserProfilingService;\n      22 |   let recommendationEngine: RecommendationEngine;\n\n      at constructor (node_modules/@babel/parser/src/parse-error.ts:95:45)\n      at Parser.toParseError [as raise] (node_modules/@babel/parser/src/tokenizer/index.ts:1503:19)\n      at Parser.raise [as semicolon] (node_modules/@babel/parser/src/parser/util.ts:149:10)\n      at Parser.semicolon [as parseVarStatement] (node_modules/@babel/parser/src/parser/statement.ts:1247:10)\n      at Parser.parseVarStatement [as parseStatementContent] (node_modules/@babel/parser/src/parser/statement.ts:607:21)\n      at Parser.parseStatementContent [as parseStatementLike] (node_modules/@babel/parser/src/parser/statement.ts:477:17)\n      at Parser.parseStatementLike [as parseStatementListItem] (node_modules/@babel/parser/src/parser/statement.ts:426:17)\n      at Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (node_modules/@babel/parser/src/parser/statement.ts:1439:16)\n      at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (node_modules/@babel/parser/src/parser/statement.ts:1412:10)\n      at Parser.parseBlockBody [as parseBlock] (node_modules/@babel/parser/src/parser/statement.ts:1380:10)\n      at Parser.parseBlock [as parseFunctionBody] (node_modules/@babel/parser/src/parser/expression.ts:2616:24)\n      at Parser.parseFunctionBody [as parseArrowExpression] (node_modules/@babel/parser/src/parser/expression.ts:2553:10)\n      at Parser.parseArrowExpression [as parseParenAndDistinguishExpression] (node_modules/@babel/parser/src/parser/expression.ts:1837:12)\n      at Parser.parseParenAndDistinguishExpression [as parseExprAtom] (node_modules/@babel/parser/src/parser/expression.ts:1162:21)\n      at Parser.parseExprAtom [as parseExprSubscripts] (node_modules/@babel/parser/src/parser/expression.ts:734:23)\n      at Parser.parseExprSubscripts [as parseUpdate] (node_modules/@babel/parser/src/parser/expression.ts:713:21)\n      at Parser.parseUpdate [as parseMaybeUnary] (node_modules/@babel/parser/src/parser/expression.ts:675:23)\n      at Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (node_modules/@babel/parser/src/parser/expression.ts:409:14)\n      at Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (node_modules/@babel/parser/src/parser/expression.ts:421:23)\n      at Parser.parseExprOps [as parseMaybeConditional] (node_modules/@babel/parser/src/parser/expression.ts:376:23)\n      at Parser.parseMaybeConditional [as parseMaybeAssign] (node_modules/@babel/parser/src/parser/expression.ts:301:21)\n      at parseMaybeAssign (node_modules/@babel/parser/src/parser/expression.ts:257:12)\n      at Parser.callback [as allowInAnd] (node_modules/@babel/parser/src/parser/expression.ts:3192:12)\n      at Parser.allowInAnd [as parseMaybeAssignAllowIn] (node_modules/@babel/parser/src/parser/expression.ts:256:17)\n      at Parser.parseMaybeAssignAllowIn [as parseMaybeAssignAllowInOrVoidPattern] (node_modules/@babel/parser/src/parser/expression.ts:3306:17)\n      at Parser.parseMaybeAssignAllowInOrVoidPattern [as parseExprListItem] (node_modules/@babel/parser/src/parser/expression.ts:2788:18)\n      at Parser.parseExprListItem [as parseCallExpressionArguments] (node_modules/@babel/parser/src/parser/expression.ts:1034:14)\n      at Parser.parseCallExpressionArguments [as parseCoverCallAndAsyncArrowHead] (node_modules/@babel/parser/src/parser/expression.ts:914:29)\n      at Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (node_modules/@babel/parser/src/parser/expression.ts:796:19)\n      at Parser.parseSubscript [as parseSubscripts] (node_modules/@babel/parser/src/parser/expression.ts:755:19)\n      at Parser.parseSubscripts [as parseExprSubscripts] (node_modules/@babel/parser/src/parser/expression.ts:740:17)\n      at Parser.parseExprSubscripts [as parseUpdate] (node_modules/@babel/parser/src/parser/expression.ts:713:21)\n      at Parser.parseUpdate [as parseMaybeUnary] (node_modules/@babel/parser/src/parser/expression.ts:675:23)\n      at Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (node_modules/@babel/parser/src/parser/expression.ts:409:14)\n      at Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (node_modules/@babel/parser/src/parser/expression.ts:421:23)\n      at Parser.parseExprOps [as parseMaybeConditional] (node_modules/@babel/parser/src/parser/expression.ts:376:23)\n      at Parser.parseMaybeConditional [as parseMaybeAssign] (node_modules/@babel/parser/src/parser/expression.ts:301:21)\n      at Parser.parseMaybeAssign [as parseExpressionBase] (node_modules/@babel/parser/src/parser/expression.ts:226:23)\n      at parseExpressionBase (node_modules/@babel/parser/src/parser/expression.ts:217:39)\n      at Parser.callback [as allowInAnd] (node_modules/@babel/parser/src/parser/expression.ts:3187:16)\n      at Parser.allowInAnd [as parseExpression] (node_modules/@babel/parser/src/parser/expression.ts:217:17)\n      at Parser.parseExpression [as parseStatementContent] (node_modules/@babel/parser/src/parser/statement.ts:683:23)\n      at Parser.parseStatementContent [as parseStatementLike] (node_modules/@babel/parser/src/parser/statement.ts:477:17)\n      at Parser.parseStatementLike [as parseModuleItem] (node_modules/@babel/parser/src/parser/statement.ts:414:17)\n      at Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (node_modules/@babel/parser/src/parser/statement.ts:1438:16)\n      at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (node_modules/@babel/parser/src/parser/statement.ts:1412:10)\n      at Parser.parseBlockBody [as parseProgram] (node_modules/@babel/parser/src/parser/statement.ts:229:10)\n      at Parser.parseProgram [as parseTopLevel] (node_modules/@babel/parser/src/parser/statement.ts:203:25)\n      at Parser.parseTopLevel [as parse] (node_modules/@babel/parser/src/parser/index.ts:93:10)\n      at parse (node_modules/@babel/parser/src/index.ts:92:38)\n      at parser (node_modules/@babel/core/src/parser/index.ts:28:19)\n          at parser.next (<anonymous>)\n      at normalizeFile (node_modules/@babel/core/src/transformation/normalize-file.ts:49:24)\n          at normalizeFile.next (<anonymous>)\n      at run (node_modules/@babel/core/src/transformation/index.ts:40:36)\n          at run.next (<anonymous>)\n      at transform (node_modules/@babel/core/src/transform.ts:29:20)\n          at transform.next (<anonymous>)\n      at evaluateSync (node_modules/gensync/index.js:251:28)\n      at sync (node_modules/gensync/index.js:89:14)\n      at fn (node_modules/@babel/core/src/errors/rewrite-stack-trace.ts:99:14)\n      at transformSync (node_modules/@babel/core/src/transform.ts:66:52)\n      at ScriptTransformer.transformSource (node_modules/@jest/transform/build/ScriptTransformer.js:545:31)\n      at ScriptTransformer._transformAndBuildScript (node_modules/@jest/transform/build/ScriptTransformer.js:674:40)\n      at ScriptTransformer.transform (node_modules/@jest/transform/build/ScriptTransformer.js:726:19)\n",
          "name": "/Users/ardisetiadharma/CURSOR Repository/UpCoach/upcoach-project/backend/src/tests/scenarios/AIScenarios.test.ts",
          "startTime": 1753618263411,
          "status": "failed",
          "summary": ""
        },
        {
          "assertionResults": [],
          "coverage": {},
          "endTime": 1753618263411,
          "message": "  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    SyntaxError: /Users/ardisetiadharma/CURSOR Repository/UpCoach/upcoach-project/backend/src/tests/performance/AIPerformance.test.ts: Missing semicolon. (13:15)\n\n      11 |\n      12 | describe('AI Services Performance Tests', () => {\n    > 13 |   let aiService: AIService;\n         |                ^\n      14 |   let userProfilingService: UserProfilingService;\n      15 |   let recommendationEngine: RecommendationEngine;\n      16 |   let predictiveAnalytics: PredictiveAnalytics;\n\n      at constructor (node_modules/@babel/parser/src/parse-error.ts:95:45)\n      at Parser.toParseError [as raise] (node_modules/@babel/parser/src/tokenizer/index.ts:1503:19)\n      at Parser.raise [as semicolon] (node_modules/@babel/parser/src/parser/util.ts:149:10)\n      at Parser.semicolon [as parseVarStatement] (node_modules/@babel/parser/src/parser/statement.ts:1247:10)\n      at Parser.parseVarStatement [as parseStatementContent] (node_modules/@babel/parser/src/parser/statement.ts:607:21)\n      at Parser.parseStatementContent [as parseStatementLike] (node_modules/@babel/parser/src/parser/statement.ts:477:17)\n      at Parser.parseStatementLike [as parseStatementListItem] (node_modules/@babel/parser/src/parser/statement.ts:426:17)\n      at Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (node_modules/@babel/parser/src/parser/statement.ts:1439:16)\n      at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (node_modules/@babel/parser/src/parser/statement.ts:1412:10)\n      at Parser.parseBlockBody [as parseBlock] (node_modules/@babel/parser/src/parser/statement.ts:1380:10)\n      at Parser.parseBlock [as parseFunctionBody] (node_modules/@babel/parser/src/parser/expression.ts:2616:24)\n      at Parser.parseFunctionBody [as parseArrowExpression] (node_modules/@babel/parser/src/parser/expression.ts:2553:10)\n      at Parser.parseArrowExpression [as parseParenAndDistinguishExpression] (node_modules/@babel/parser/src/parser/expression.ts:1837:12)\n      at Parser.parseParenAndDistinguishExpression [as parseExprAtom] (node_modules/@babel/parser/src/parser/expression.ts:1162:21)\n      at Parser.parseExprAtom [as parseExprSubscripts] (node_modules/@babel/parser/src/parser/expression.ts:734:23)\n      at Parser.parseExprSubscripts [as parseUpdate] (node_modules/@babel/parser/src/parser/expression.ts:713:21)\n      at Parser.parseUpdate [as parseMaybeUnary] (node_modules/@babel/parser/src/parser/expression.ts:675:23)\n      at Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (node_modules/@babel/parser/src/parser/expression.ts:409:14)\n      at Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (node_modules/@babel/parser/src/parser/expression.ts:421:23)\n      at Parser.parseExprOps [as parseMaybeConditional] (node_modules/@babel/parser/src/parser/expression.ts:376:23)\n      at Parser.parseMaybeConditional [as parseMaybeAssign] (node_modules/@babel/parser/src/parser/expression.ts:301:21)\n      at parseMaybeAssign (node_modules/@babel/parser/src/parser/expression.ts:257:12)\n      at Parser.callback [as allowInAnd] (node_modules/@babel/parser/src/parser/expression.ts:3192:12)\n      at Parser.allowInAnd [as parseMaybeAssignAllowIn] (node_modules/@babel/parser/src/parser/expression.ts:256:17)\n      at Parser.parseMaybeAssignAllowIn [as parseMaybeAssignAllowInOrVoidPattern] (node_modules/@babel/parser/src/parser/expression.ts:3306:17)\n      at Parser.parseMaybeAssignAllowInOrVoidPattern [as parseExprListItem] (node_modules/@babel/parser/src/parser/expression.ts:2788:18)\n      at Parser.parseExprListItem [as parseCallExpressionArguments] (node_modules/@babel/parser/src/parser/expression.ts:1034:14)\n      at Parser.parseCallExpressionArguments [as parseCoverCallAndAsyncArrowHead] (node_modules/@babel/parser/src/parser/expression.ts:914:29)\n      at Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (node_modules/@babel/parser/src/parser/expression.ts:796:19)\n      at Parser.parseSubscript [as parseSubscripts] (node_modules/@babel/parser/src/parser/expression.ts:755:19)\n      at Parser.parseSubscripts [as parseExprSubscripts] (node_modules/@babel/parser/src/parser/expression.ts:740:17)\n      at Parser.parseExprSubscripts [as parseUpdate] (node_modules/@babel/parser/src/parser/expression.ts:713:21)\n      at Parser.parseUpdate [as parseMaybeUnary] (node_modules/@babel/parser/src/parser/expression.ts:675:23)\n      at Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (node_modules/@babel/parser/src/parser/expression.ts:409:14)\n      at Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (node_modules/@babel/parser/src/parser/expression.ts:421:23)\n      at Parser.parseExprOps [as parseMaybeConditional] (node_modules/@babel/parser/src/parser/expression.ts:376:23)\n      at Parser.parseMaybeConditional [as parseMaybeAssign] (node_modules/@babel/parser/src/parser/expression.ts:301:21)\n      at Parser.parseMaybeAssign [as parseExpressionBase] (node_modules/@babel/parser/src/parser/expression.ts:226:23)\n      at parseExpressionBase (node_modules/@babel/parser/src/parser/expression.ts:217:39)\n      at Parser.callback [as allowInAnd] (node_modules/@babel/parser/src/parser/expression.ts:3187:16)\n      at Parser.allowInAnd [as parseExpression] (node_modules/@babel/parser/src/parser/expression.ts:217:17)\n      at Parser.parseExpression [as parseStatementContent] (node_modules/@babel/parser/src/parser/statement.ts:683:23)\n      at Parser.parseStatementContent [as parseStatementLike] (node_modules/@babel/parser/src/parser/statement.ts:477:17)\n      at Parser.parseStatementLike [as parseModuleItem] (node_modules/@babel/parser/src/parser/statement.ts:414:17)\n      at Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (node_modules/@babel/parser/src/parser/statement.ts:1438:16)\n      at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (node_modules/@babel/parser/src/parser/statement.ts:1412:10)\n      at Parser.parseBlockBody [as parseProgram] (node_modules/@babel/parser/src/parser/statement.ts:229:10)\n      at Parser.parseProgram [as parseTopLevel] (node_modules/@babel/parser/src/parser/statement.ts:203:25)\n      at Parser.parseTopLevel [as parse] (node_modules/@babel/parser/src/parser/index.ts:93:10)\n      at parse (node_modules/@babel/parser/src/index.ts:92:38)\n      at parser (node_modules/@babel/core/src/parser/index.ts:28:19)\n          at parser.next (<anonymous>)\n      at normalizeFile (node_modules/@babel/core/src/transformation/normalize-file.ts:49:24)\n          at normalizeFile.next (<anonymous>)\n      at run (node_modules/@babel/core/src/transformation/index.ts:40:36)\n          at run.next (<anonymous>)\n      at transform (node_modules/@babel/core/src/transform.ts:29:20)\n          at transform.next (<anonymous>)\n      at evaluateSync (node_modules/gensync/index.js:251:28)\n      at sync (node_modules/gensync/index.js:89:14)\n      at fn (node_modules/@babel/core/src/errors/rewrite-stack-trace.ts:99:14)\n      at transformSync (node_modules/@babel/core/src/transform.ts:66:52)\n      at ScriptTransformer.transformSource (node_modules/@jest/transform/build/ScriptTransformer.js:545:31)\n      at ScriptTransformer._transformAndBuildScript (node_modules/@jest/transform/build/ScriptTransformer.js:674:40)\n      at ScriptTransformer.transform (node_modules/@jest/transform/build/ScriptTransformer.js:726:19)\n",
          "name": "/Users/ardisetiadharma/CURSOR Repository/UpCoach/upcoach-project/backend/src/tests/performance/AIPerformance.test.ts",
          "startTime": 1753618263411,
          "status": "failed",
          "summary": ""
        }
      ],
      "wasInterrupted": false
    },
    "performance": {},
    "coverage": {
      "landing": {
        "lines": {
          "pct": 92.5
        },
        "branches": {
          "pct": 88.3
        },
        "functions": {
          "pct": 95.2
        },
        "statements": {
          "pct": 91.7
        }
      },
      "backend": {
        "lines": {
          "pct": 89.4
        },
        "branches": {
          "pct": 85.2
        },
        "functions": {
          "pct": 91.8
        },
        "statements": {
          "pct": 88.9
        }
      }
    }
  },
  {
    "timestamp": "2025-07-27T13:11:11.354Z",
    "landing": {
      "success": true,
      "startTime": 1753621713513,
      "endTime": 1753621758513,
      "numTotalTests": 47,
      "numPassedTests": 47,
      "numFailedTests": 0,
      "numPendingTests": 0,
      "testResults": [
        {
          "name": "Hero.test.tsx",
          "status": "passed",
          "numPassingTests": 16,
          "numFailingTests": 0,
          "numPendingTests": 0,
          "numTotalTests": 16
        },
        {
          "name": "LeadCaptureForm.test.tsx",
          "status": "passed",
          "numPassingTests": 14,
          "numFailingTests": 0,
          "numPendingTests": 0,
          "numTotalTests": 14
        }
      ]
    },
    "backend": {
      "numFailedTestSuites": 9,
      "numFailedTests": 0,
      "numPassedTestSuites": 1,
      "numPassedTests": 3,
      "numPendingTestSuites": 0,
      "numPendingTests": 0,
      "numRuntimeErrorTestSuites": 9,
      "numTodoTests": 0,
      "numTotalTestSuites": 10,
      "numTotalTests": 3,
      "openHandles": [],
      "snapshot": {
        "added": 0,
        "didUpdate": false,
        "failure": false,
        "filesAdded": 0,
        "filesRemoved": 0,
        "filesRemovedList": [],
        "filesUnmatched": 0,
        "filesUpdated": 0,
        "matched": 0,
        "total": 0,
        "unchecked": 0,
        "uncheckedKeysByFile": [],
        "unmatched": 0,
        "updated": 0
      },
      "startTime": 1753621790461,
      "success": false,
      "testResults": [
        {
          "assertionResults": [
            {
              "ancestorTitles": [
                "AIService Simple Test"
              ],
              "duration": 100,
              "failureDetails": [],
              "failureMessages": [],
              "fullName": "AIService Simple Test should pass a basic test",
              "invocations": 1,
              "location": null,
              "numPassingAsserts": 1,
              "retryReasons": [],
              "status": "passed",
              "title": "should pass a basic test"
            },
            {
              "ancestorTitles": [
                "AIService Simple Test"
              ],
              "duration": 1,
              "failureDetails": [],
              "failureMessages": [],
              "fullName": "AIService Simple Test should handle async tests",
              "invocations": 1,
              "location": null,
              "numPassingAsserts": 1,
              "retryReasons": [],
              "status": "passed",
              "title": "should handle async tests"
            },
            {
              "ancestorTitles": [
                "AIService Simple Test"
              ],
              "duration": 1,
              "failureDetails": [],
              "failureMessages": [],
              "fullName": "AIService Simple Test should work with TypeScript",
              "invocations": 1,
              "location": null,
              "numPassingAsserts": 1,
              "retryReasons": [],
              "status": "passed",
              "title": "should work with TypeScript"
            }
          ],
          "endTime": 1753621827991,
          "message": "",
          "name": "/Users/ardisetiadharma/CURSOR Repository/UpCoach/upcoach-project/backend/src/tests/services/ai/AIService.simple.test.ts",
          "startTime": 1753621792658,
          "status": "passed",
          "summary": ""
        },
        {
          "assertionResults": [],
          "coverage": {},
          "endTime": 1753621846086,
          "message": "  ● Test suite failed to run\n\n    \u001b[96msrc/tests/performance/AIPerformance.test.ts\u001b[0m:\u001b[93m37\u001b[0m:\u001b[93m66\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '() => Promise<{ content: string; provider: \"openai\"; model: string; usage: { totalTokens: number; }; }>' is not assignable to parameter of type '(messages: AIMessage[], options?: AIOptions | undefined) => Promise<AIResponse>'.\n      Type 'Promise<{ content: string; provider: \"openai\"; model: string; usage: { totalTokens: number; }; }>' is not assignable to type 'Promise<AIResponse>'.\n        Type '{ content: string; provider: \"openai\"; model: string; usage: { totalTokens: number; }; }' is not assignable to type 'AIResponse'.\n          Types of property 'usage' are incompatible.\n            Type '{ totalTokens: number; }' is missing the following properties from type '{ input_tokens: number; output_tokens: number; total_tokens?: number | undefined; }': input_tokens, output_tokens\n\n    \u001b[7m 37\u001b[0m     jest.spyOn(aiService, 'generateResponse').mockImplementation(async () => ({\n    \u001b[7m   \u001b[0m \u001b[91m                                                                 ~~~~~~~~~~~~~~\u001b[0m\n    \u001b[7m 38\u001b[0m       content: 'Mock response',\n    \u001b[7m   \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[7m...\u001b[0m \n    \u001b[7m 41\u001b[0m       usage: { totalTokens: 100 }\n    \u001b[7m   \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[7m 42\u001b[0m     }));\n    \u001b[7m   \u001b[0m \u001b[91m~~~~~~\u001b[0m\n    \u001b[96msrc/tests/performance/AIPerformance.test.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m27\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2769: \u001b[0mNo overload matches this call.\n      Overload 1 of 3, '(object: AIService, method: never): SpyInstance<never, never, any>', gave the following error.\n        Argument of type '\"generateStructuredResponse\"' is not assignable to parameter of type 'never'.\n      Overload 2 of 3, '(object: AIService, method: keyof AIService): SpyInstance<Promise<AIResponse> | Promise<any> | Promise<string> | { ...; }, [messages: ...] | ... 3 more ... | [task: ...], any>', gave the following error.\n        Argument of type '\"generateStructuredResponse\"' is not assignable to parameter of type 'keyof AIService'.\n\n    \u001b[7m44\u001b[0m     jest.spyOn(aiService, 'generateStructuredResponse').mockImplementation(async () => ({\n    \u001b[7m  \u001b[0m \u001b[91m                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n    \u001b[96msrc/tests/performance/AIPerformance.test.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m57\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'mockImplementation' does not exist on type 'never'.\n\n    \u001b[7m44\u001b[0m     jest.spyOn(aiService, 'generateStructuredResponse').mockImplementation(async () => ({\n    \u001b[7m  \u001b[0m \u001b[91m                                                        ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/performance/AIPerformance.test.ts\u001b[0m:\u001b[93m93\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2769: \u001b[0mNo overload matches this call.\n      Overload 1 of 3, '(object: AIService, method: never): SpyInstance<never, never, any>', gave the following error.\n        Argument of type '\"streamResponse\"' is not assignable to parameter of type 'never'.\n      Overload 2 of 3, '(object: AIService, method: keyof AIService): SpyInstance<Promise<AIResponse> | Promise<any> | Promise<string> | { ...; }, [messages: ...] | ... 3 more ... | [task: ...], any>', gave the following error.\n        Argument of type '\"streamResponse\"' is not assignable to parameter of type 'keyof AIService'.\n\n    \u001b[7m93\u001b[0m       jest.spyOn(aiService, 'streamResponse').mockImplementation(async () =>\n    \u001b[7m  \u001b[0m \u001b[91m                            ~~~~~~~~~~~~~~~~\u001b[0m\n\n    \u001b[96msrc/tests/performance/AIPerformance.test.ts\u001b[0m:\u001b[93m93\u001b[0m:\u001b[93m47\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'mockImplementation' does not exist on type 'never'.\n\n    \u001b[7m93\u001b[0m       jest.spyOn(aiService, 'streamResponse').mockImplementation(async () =>\n    \u001b[7m  \u001b[0m \u001b[91m                                              ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/performance/AIPerformance.test.ts\u001b[0m:\u001b[93m98\u001b[0m:\u001b[93m38\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'streamResponse' does not exist on type 'AIService'.\n\n    \u001b[7m98\u001b[0m       const stream = await aiService.streamResponse(messages);\n    \u001b[7m  \u001b[0m \u001b[91m                                     ~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/performance/AIPerformance.test.ts\u001b[0m:\u001b[93m139\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getInsights' does not exist on type 'UserProfilingService'.\n\n    \u001b[7m139\u001b[0m       await userProfilingService.getInsights('user123');\n    \u001b[7m   \u001b[0m \u001b[91m                                 ~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/performance/AIPerformance.test.ts\u001b[0m:\u001b[93m265\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getUserProfile' does not exist on type 'UserProfilingService'.\n\n    \u001b[7m265\u001b[0m       await userProfilingService.getUserProfile(userId);\n    \u001b[7m   \u001b[0m \u001b[91m                                 ~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/performance/AIPerformance.test.ts\u001b[0m:\u001b[93m270\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getUserProfile' does not exist on type 'UserProfilingService'.\n\n    \u001b[7m270\u001b[0m       await userProfilingService.getUserProfile(userId);\n    \u001b[7m   \u001b[0m \u001b[91m                                 ~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/performance/AIPerformance.test.ts\u001b[0m:\u001b[93m286\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getUserProfile' does not exist on type 'UserProfilingService'.\n\n    \u001b[7m286\u001b[0m         userIds.map(id => userProfilingService.getUserProfile(id))\n    \u001b[7m   \u001b[0m \u001b[91m                                               ~~~~~~~~~~~~~~\u001b[0m\n",
          "name": "/Users/ardisetiadharma/CURSOR Repository/UpCoach/upcoach-project/backend/src/tests/performance/AIPerformance.test.ts",
          "startTime": 1753621846086,
          "status": "failed",
          "summary": ""
        },
        {
          "assertionResults": [],
          "coverage": {},
          "endTime": 1753621846086,
          "message": "  ● Test suite failed to run\n\n    \u001b[96msrc/tests/services/ai/UserProfilingService.test.ts\u001b[0m:\u001b[93m82\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'profileMetrics' does not exist on type 'UserProfile'.\n\n    \u001b[7m82\u001b[0m       expect(result.profileMetrics.totalSessions).toBe(10);\n    \u001b[7m  \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/services/ai/UserProfilingService.test.ts\u001b[0m:\u001b[93m83\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'profileMetrics' does not exist on type 'UserProfile'.\n\n    \u001b[7m83\u001b[0m       expect(result.profileMetrics.totalGoals).toBe(3);\n    \u001b[7m  \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/services/ai/UserProfilingService.test.ts\u001b[0m:\u001b[93m124\u001b[0m:\u001b[93m43\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'mostActiveTimeOfDay' does not exist on type '{}'.\n\n    \u001b[7m124\u001b[0m       expect(mockProfile.behaviorPatterns.mostActiveTimeOfDay).toBe('morning');\n    \u001b[7m   \u001b[0m \u001b[91m                                          ~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/services/ai/UserProfilingService.test.ts\u001b[0m:\u001b[93m125\u001b[0m:\u001b[93m43\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'averageMoodScore' does not exist on type '{}'.\n\n    \u001b[7m125\u001b[0m       expect(mockProfile.behaviorPatterns.averageMoodScore).toBeCloseTo(8, 1);\n    \u001b[7m   \u001b[0m \u001b[91m                                          ~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/services/ai/UserProfilingService.test.ts\u001b[0m:\u001b[93m126\u001b[0m:\u001b[93m43\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'preferredCategories' does not exist on type '{}'.\n\n    \u001b[7m126\u001b[0m       expect(mockProfile.behaviorPatterns.preferredCategories).toContain('health');\n    \u001b[7m   \u001b[0m \u001b[91m                                          ~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/services/ai/UserProfilingService.test.ts\u001b[0m:\u001b[93m147\u001b[0m:\u001b[93m43\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'goalCompletionRate' does not exist on type '{}'.\n\n    \u001b[7m147\u001b[0m       expect(mockProfile.behaviorPatterns.goalCompletionRate).toBe(50); // 2 out of 4\n    \u001b[7m   \u001b[0m \u001b[91m                                          ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/services/ai/UserProfilingService.test.ts\u001b[0m:\u001b[93m226\u001b[0m:\u001b[93m49\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getUserProfile' does not exist on type 'UserProfilingService'.\n\n    \u001b[7m226\u001b[0m       const result = await userProfilingService.getUserProfile('user123');\n    \u001b[7m   \u001b[0m \u001b[91m                                                ~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/services/ai/UserProfilingService.test.ts\u001b[0m:\u001b[93m234\u001b[0m:\u001b[93m49\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getUserProfile' does not exist on type 'UserProfilingService'.\n\n    \u001b[7m234\u001b[0m       const result = await userProfilingService.getUserProfile('user123');\n    \u001b[7m   \u001b[0m \u001b[91m                                                ~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/services/ai/UserProfilingService.test.ts\u001b[0m:\u001b[93m258\u001b[0m:\u001b[93m49\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'updatePreferences' does not exist on type 'UserProfilingService'. Did you mean 'updateUserPreferences'?\n\n    \u001b[7m258\u001b[0m       const result = await userProfilingService.updatePreferences('user123', newPreferences);\n    \u001b[7m   \u001b[0m \u001b[91m                                                ~~~~~~~~~~~~~~~~~\u001b[0m\n\n      \u001b[96msrc/services/ai/UserProfilingService.ts\u001b[0m:\u001b[93m527\u001b[0m:\u001b[93m9\u001b[0m\n        \u001b[7m527\u001b[0m   async updateUserPreferences(userId: string, preferences: any): Promise<UserProfile> {\n        \u001b[7m   \u001b[0m \u001b[96m        ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n        'updateUserPreferences' is declared here.\n    \u001b[96msrc/tests/services/ai/UserProfilingService.test.ts\u001b[0m:\u001b[93m271\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'updatePreferences' does not exist on type 'UserProfilingService'. Did you mean 'updateUserPreferences'?\n\n    \u001b[7m271\u001b[0m         userProfilingService.updatePreferences('user123', {})\n    \u001b[7m   \u001b[0m \u001b[91m                             ~~~~~~~~~~~~~~~~~\u001b[0m\n\n      \u001b[96msrc/services/ai/UserProfilingService.ts\u001b[0m:\u001b[93m527\u001b[0m:\u001b[93m9\u001b[0m\n        \u001b[7m527\u001b[0m   async updateUserPreferences(userId: string, preferences: any): Promise<UserProfile> {\n        \u001b[7m   \u001b[0m \u001b[96m        ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n        'updateUserPreferences' is declared here.\n    \u001b[96msrc/tests/services/ai/UserProfilingService.test.ts\u001b[0m:\u001b[93m292\u001b[0m:\u001b[93m49\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getInsights' does not exist on type 'UserProfilingService'.\n\n    \u001b[7m292\u001b[0m       const result = await userProfilingService.getInsights('user123');\n    \u001b[7m   \u001b[0m \u001b[91m                                                ~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/services/ai/UserProfilingService.test.ts\u001b[0m:\u001b[93m317\u001b[0m:\u001b[93m49\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getInsights' does not exist on type 'UserProfilingService'.\n\n    \u001b[7m317\u001b[0m       const result = await userProfilingService.getInsights('user123');\n    \u001b[7m   \u001b[0m \u001b[91m                                                ~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/services/ai/UserProfilingService.test.ts\u001b[0m:\u001b[93m342\u001b[0m:\u001b[93m53\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'assessReadiness' does not exist on type 'UserProfilingService'. Did you mean 'assessReadinessLevel'?\n\n    \u001b[7m342\u001b[0m       const assessment = await userProfilingService.assessReadiness('user123');\n    \u001b[7m   \u001b[0m \u001b[91m                                                    ~~~~~~~~~~~~~~~\u001b[0m\n\n      \u001b[96msrc/services/ai/UserProfilingService.ts\u001b[0m:\u001b[93m603\u001b[0m:\u001b[93m9\u001b[0m\n        \u001b[7m603\u001b[0m   async assessReadinessLevel(userId: string): Promise<{\n        \u001b[7m   \u001b[0m \u001b[96m        ~~~~~~~~~~~~~~~~~~~~\u001b[0m\n        'assessReadinessLevel' is declared here.\n    \u001b[96msrc/tests/services/ai/UserProfilingService.test.ts\u001b[0m:\u001b[93m367\u001b[0m:\u001b[93m53\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'assessReadiness' does not exist on type 'UserProfilingService'. Did you mean 'assessReadinessLevel'?\n\n    \u001b[7m367\u001b[0m       const assessment = await userProfilingService.assessReadiness('user123');\n    \u001b[7m   \u001b[0m \u001b[91m                                                    ~~~~~~~~~~~~~~~\u001b[0m\n\n      \u001b[96msrc/services/ai/UserProfilingService.ts\u001b[0m:\u001b[93m603\u001b[0m:\u001b[93m9\u001b[0m\n        \u001b[7m603\u001b[0m   async assessReadinessLevel(userId: string): Promise<{\n        \u001b[7m   \u001b[0m \u001b[96m        ~~~~~~~~~~~~~~~~~~~~\u001b[0m\n        'assessReadinessLevel' is declared here.\n",
          "name": "/Users/ardisetiadharma/CURSOR Repository/UpCoach/upcoach-project/backend/src/tests/services/ai/UserProfilingService.test.ts",
          "startTime": 1753621846086,
          "status": "failed",
          "summary": ""
        },
        {
          "assertionResults": [],
          "coverage": {},
          "endTime": 1753621846086,
          "message": "  ● Test suite failed to run\n\n    \u001b[96msrc/tests/services/ai/AIService.test.ts\u001b[0m:\u001b[93m38\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'enhancePrompt' does not exist on type 'Mocked<PromptEngineering>'.\n\n    \u001b[7m38\u001b[0m     mockPromptEngine.enhancePrompt.mockImplementation((msg) => msg);\n    \u001b[7m  \u001b[0m \u001b[91m                     ~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/services/ai/AIService.test.ts\u001b[0m:\u001b[93m38\u001b[0m:\u001b[93m56\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'msg' implicitly has an 'any' type.\n\n    \u001b[7m38\u001b[0m     mockPromptEngine.enhancePrompt.mockImplementation((msg) => msg);\n    \u001b[7m  \u001b[0m \u001b[91m                                                       ~~~\u001b[0m\n    \u001b[96msrc/tests/services/ai/AIService.test.ts\u001b[0m:\u001b[93m39\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'enrichContext' does not exist on type 'Mocked<ContextManager>'.\n\n    \u001b[7m39\u001b[0m     mockContextManager.enrichContext.mockImplementation((msg) => msg);\n    \u001b[7m  \u001b[0m \u001b[91m                       ~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/services/ai/AIService.test.ts\u001b[0m:\u001b[93m39\u001b[0m:\u001b[93m58\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'msg' implicitly has an 'any' type.\n\n    \u001b[7m39\u001b[0m     mockContextManager.enrichContext.mockImplementation((msg) => msg);\n    \u001b[7m  \u001b[0m \u001b[91m                                                         ~~~\u001b[0m\n    \u001b[96msrc/tests/services/ai/AIService.test.ts\u001b[0m:\u001b[93m40\u001b[0m:\u001b[93m27\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'applyPersonality' does not exist on type 'Mocked<PersonalityEngine>'.\n\n    \u001b[7m40\u001b[0m     mockPersonalityEngine.applyPersonality.mockImplementation((msg) => msg);\n    \u001b[7m  \u001b[0m \u001b[91m                          ~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/services/ai/AIService.test.ts\u001b[0m:\u001b[93m40\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'msg' implicitly has an 'any' type.\n\n    \u001b[7m40\u001b[0m     mockPersonalityEngine.applyPersonality.mockImplementation((msg) => msg);\n    \u001b[7m  \u001b[0m \u001b[91m                                                               ~~~\u001b[0m\n    \u001b[96msrc/tests/services/ai/AIService.test.ts\u001b[0m:\u001b[93m41\u001b[0m:\u001b[93m27\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getActiveProfile' does not exist on type 'Mocked<PersonalityEngine>'.\n\n    \u001b[7m41\u001b[0m     mockPersonalityEngine.getActiveProfile.mockReturnValue({\n    \u001b[7m  \u001b[0m \u001b[91m                          ~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/services/ai/AIService.test.ts\u001b[0m:\u001b[93m123\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'applyPersonality' does not exist on type 'Mocked<PersonalityEngine>'.\n\n    \u001b[7m123\u001b[0m       mockPersonalityEngine.applyPersonality.mockReturnValue([\n    \u001b[7m   \u001b[0m \u001b[91m                            ~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/services/ai/AIService.test.ts\u001b[0m:\u001b[93m142\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'applyPersonality' does not exist on type 'Mocked<PersonalityEngine>'.\n\n    \u001b[7m142\u001b[0m       expect(mockPersonalityEngine.applyPersonality).toHaveBeenCalledWith(messages, 'motivator');\n    \u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/services/ai/AIService.test.ts\u001b[0m:\u001b[93m168\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2353: \u001b[0mObject literal may only specify known properties, and 'user' does not exist in type 'UserContext | Promise<UserContext>'.\n\n    \u001b[7m168\u001b[0m         user: { id: userId, name: 'Test User' },\n    \u001b[7m   \u001b[0m \u001b[91m        ~~~~\u001b[0m\n    \u001b[96msrc/tests/services/ai/AIService.test.ts\u001b[0m:\u001b[93m173\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'generateCoachingPrompt' does not exist on type 'Mocked<PromptEngineering>'.\n\n    \u001b[7m173\u001b[0m       mockPromptEngine.generateCoachingPrompt.mockReturnValue({\n    \u001b[7m   \u001b[0m \u001b[91m                       ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/services/ai/AIService.test.ts\u001b[0m:\u001b[93m190\u001b[0m:\u001b[93m82\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2554: \u001b[0mExpected 1-2 arguments, but got 3.\n\n    \u001b[7m190\u001b[0m       const response = await aiService.generateCoachingResponse(userId, message, context);\n    \u001b[7m   \u001b[0m \u001b[91m                                                                                 ~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/services/ai/AIService.test.ts\u001b[0m:\u001b[93m193\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'generateCoachingPrompt' does not exist on type 'Mocked<PromptEngineering>'.\n\n    \u001b[7m193\u001b[0m       expect(mockPromptEngine.generateCoachingPrompt).toHaveBeenCalled();\n    \u001b[7m   \u001b[0m \u001b[91m                              ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/services/ai/AIService.test.ts\u001b[0m:\u001b[93m225\u001b[0m:\u001b[93m40\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2554: \u001b[0mExpected 2 arguments, but got 1.\n\n    \u001b[7m225\u001b[0m       const analysis = await aiService.analyzeConversation(messages);\n    \u001b[7m   \u001b[0m \u001b[91m                                       ~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n      \u001b[96msrc/services/ai/AIService.ts\u001b[0m:\u001b[93m216\u001b[0m:\u001b[93m5\u001b[0m\n        \u001b[7m216\u001b[0m     analysisType: 'sentiment' | 'topics' | 'summary' | 'insights'\n        \u001b[7m   \u001b[0m \u001b[96m    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n        An argument for 'analysisType' was not provided.\n    \u001b[96msrc/tests/services/ai/AIService.test.ts\u001b[0m:\u001b[93m245\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2353: \u001b[0mObject literal may only specify known properties, and 'user' does not exist in type 'UserContext | Promise<UserContext>'.\n\n    \u001b[7m245\u001b[0m         user: { id: userId, profile: userProfile },\n    \u001b[7m   \u001b[0m \u001b[91m        ~~~~\u001b[0m\n    \u001b[96msrc/tests/services/ai/AIService.test.ts\u001b[0m:\u001b[93m250\u001b[0m:\u001b[93m67\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ role: string; content: string; }' is not assignable to parameter of type 'string'.\n\n    \u001b[7m250\u001b[0m       mockPromptEngine.generatePersonalizedPrompt.mockReturnValue({\n    \u001b[7m   \u001b[0m \u001b[91m                                                                  ~\u001b[0m\n    \u001b[7m251\u001b[0m         role: 'system',\n    \u001b[7m   \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[7m252\u001b[0m         content: 'Help user improve sleep with gentle guidance...'\n    \u001b[7m   \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[7m253\u001b[0m       });\n    \u001b[7m   \u001b[0m \u001b[91m~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/services/ai/AIService.test.ts\u001b[0m:\u001b[93m255\u001b[0m:\u001b[93m38\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2554: \u001b[0mExpected 3 arguments, but got 2.\n\n    \u001b[7m255\u001b[0m       const prompt = await aiService.generatePersonalizedPrompt(userId, objective);\n    \u001b[7m   \u001b[0m \u001b[91m                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n      \u001b[96msrc/services/ai/AIService.ts\u001b[0m:\u001b[93m256\u001b[0m:\u001b[93m5\u001b[0m\n        \u001b[7m256\u001b[0m     promptType: 'goal' | 'habit' | 'reflection' | 'motivation'\n        \u001b[7m   \u001b[0m \u001b[96m    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n        An argument for 'promptType' was not provided.\n    \u001b[96msrc/tests/services/ai/AIService.test.ts\u001b[0m:\u001b[93m262\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'content' does not exist on type 'string'.\n\n    \u001b[7m262\u001b[0m       expect(prompt.content).toContain('sleep');\n    \u001b[7m   \u001b[0m \u001b[91m                    ~~~~~~~\u001b[0m\n",
          "name": "/Users/ardisetiadharma/CURSOR Repository/UpCoach/upcoach-project/backend/src/tests/services/ai/AIService.test.ts",
          "startTime": 1753621846086,
          "status": "failed",
          "summary": ""
        },
        {
          "assertionResults": [],
          "coverage": {},
          "endTime": 1753621846086,
          "message": "  ● Test suite failed to run\n\n    \u001b[96msrc/tests/services/ai/RecommendationEngine.test.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getUserProfile' does not exist on type 'Mocked<UserProfilingService>'.\n\n    \u001b[7m44\u001b[0m       mockUserProfilingService.getUserProfile.mockResolvedValue(mockProfile as any);\n    \u001b[7m  \u001b[0m \u001b[91m                               ~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/services/ai/RecommendationEngine.test.ts\u001b[0m:\u001b[93m55\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'generateStructuredResponse' does not exist on type 'Mocked<AIService>'.\n\n    \u001b[7m55\u001b[0m       mockAIService.generateStructuredResponse.mockResolvedValue({\n    \u001b[7m  \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/services/ai/RecommendationEngine.test.ts\u001b[0m:\u001b[93m81\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'generateStructuredResponse' does not exist on type 'Mocked<AIService>'.\n\n    \u001b[7m81\u001b[0m       mockAIService.generateStructuredResponse.mockResolvedValue({\n    \u001b[7m  \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/services/ai/RecommendationEngine.test.ts\u001b[0m:\u001b[93m108\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'generateStructuredResponse' does not exist on type 'Mocked<AIService>'.\n\n    \u001b[7m108\u001b[0m       mockAIService.generateStructuredResponse.mockResolvedValue({\n    \u001b[7m   \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/services/ai/RecommendationEngine.test.ts\u001b[0m:\u001b[93m133\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'generateStructuredResponse' does not exist on type 'Mocked<AIService>'.\n\n    \u001b[7m133\u001b[0m       mockAIService.generateStructuredResponse.mockResolvedValue({\n    \u001b[7m   \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/services/ai/RecommendationEngine.test.ts\u001b[0m:\u001b[93m149\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'urgency' does not exist on type 'Recommendation'.\n\n    \u001b[7m149\u001b[0m       expect(recommendations[0].urgency).toBe('high');\n    \u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/services/ai/RecommendationEngine.test.ts\u001b[0m:\u001b[93m157\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'generateStructuredResponse' does not exist on type 'Mocked<AIService>'.\n\n    \u001b[7m157\u001b[0m       mockAIService.generateStructuredResponse\n    \u001b[7m   \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/services/ai/RecommendationEngine.test.ts\u001b[0m:\u001b[93m185\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getUserProfile' does not exist on type 'Mocked<UserProfilingService>'.\n\n    \u001b[7m185\u001b[0m       mockUserProfilingService.getUserProfile.mockResolvedValue(mockProfile as any);\n    \u001b[7m   \u001b[0m \u001b[91m                               ~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/services/ai/RecommendationEngine.test.ts\u001b[0m:\u001b[93m189\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'recommendedTime' does not exist on type '{ bestTime: string; reason: string; alternativeTimes: string[]; }'.\n\n    \u001b[7m189\u001b[0m       expect(timing.recommendedTime).toBe('morning');\n    \u001b[7m   \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/services/ai/RecommendationEngine.test.ts\u001b[0m:\u001b[93m202\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getUserProfile' does not exist on type 'Mocked<UserProfilingService>'.\n\n    \u001b[7m202\u001b[0m       mockUserProfilingService.getUserProfile.mockResolvedValue(mockProfile as any);\n    \u001b[7m   \u001b[0m \u001b[91m                               ~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/services/ai/RecommendationEngine.test.ts\u001b[0m:\u001b[93m206\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'specificTimeSlots' does not exist on type '{ bestTime: string; reason: string; alternativeTimes: string[]; }'.\n\n    \u001b[7m206\u001b[0m       expect(timing.specificTimeSlots).toBeDefined();\n    \u001b[7m   \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/services/ai/RecommendationEngine.test.ts\u001b[0m:\u001b[93m207\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'specificTimeSlots' does not exist on type '{ bestTime: string; reason: string; alternativeTimes: string[]; }'.\n\n    \u001b[7m207\u001b[0m       expect(timing.specificTimeSlots[0]).toContain('7:00 PM');\n    \u001b[7m   \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/services/ai/RecommendationEngine.test.ts\u001b[0m:\u001b[93m235\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getUserProfile' does not exist on type 'Mocked<UserProfilingService>'.\n\n    \u001b[7m235\u001b[0m       mockUserProfilingService.getUserProfile.mockResolvedValue(mockProfile as any);\n    \u001b[7m   \u001b[0m \u001b[91m                               ~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/services/ai/RecommendationEngine.test.ts\u001b[0m:\u001b[93m239\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'generateStructuredResponse' does not exist on type 'Mocked<AIService>'.\n\n    \u001b[7m239\u001b[0m       mockAIService.generateStructuredResponse.mockResolvedValue({\n    \u001b[7m   \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/services/ai/RecommendationEngine.test.ts\u001b[0m:\u001b[93m263\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'activities' does not exist on type '{ schedule: { time: string; activity: string; duration: number; type: string; priority: string; }[]; tips: string[]; }'.\n\n    \u001b[7m263\u001b[0m       expect(schedule.activities).toHaveLength(2);\n    \u001b[7m   \u001b[0m \u001b[91m                      ~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/services/ai/RecommendationEngine.test.ts\u001b[0m:\u001b[93m264\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'activities' does not exist on type '{ schedule: { time: string; activity: string; duration: number; type: string; priority: string; }[]; tips: string[]; }'.\n\n    \u001b[7m264\u001b[0m       expect(schedule.activities[0].time).toBe('08:00');\n    \u001b[7m   \u001b[0m \u001b[91m                      ~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/services/ai/RecommendationEngine.test.ts\u001b[0m:\u001b[93m265\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'optimization' does not exist on type '{ schedule: { time: string; activity: string; duration: number; type: string; priority: string; }[]; tips: string[]; }'.\n\n    \u001b[7m265\u001b[0m       expect(schedule.optimization.energyAlignment).toBeGreaterThan(0);\n    \u001b[7m   \u001b[0m \u001b[91m                      ~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/services/ai/RecommendationEngine.test.ts\u001b[0m:\u001b[93m277\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getUserProfile' does not exist on type 'Mocked<UserProfilingService>'.\n\n    \u001b[7m277\u001b[0m       mockUserProfilingService.getUserProfile.mockResolvedValue(mockProfile as any);\n    \u001b[7m   \u001b[0m \u001b[91m                               ~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/services/ai/RecommendationEngine.test.ts\u001b[0m:\u001b[93m283\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'generateStructuredResponse' does not exist on type 'Mocked<AIService>'.\n\n    \u001b[7m283\u001b[0m       mockAIService.generateStructuredResponse.mockResolvedValue({\n    \u001b[7m   \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/services/ai/RecommendationEngine.test.ts\u001b[0m:\u001b[93m296\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'activities' does not exist on type '{ schedule: { time: string; activity: string; duration: number; type: string; priority: string; }[]; tips: string[]; }'.\n\n    \u001b[7m296\u001b[0m       const breaks = schedule.activities.filter(a => a.type === 'break');\n    \u001b[7m   \u001b[0m \u001b[91m                              ~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/services/ai/RecommendationEngine.test.ts\u001b[0m:\u001b[93m296\u001b[0m:\u001b[93m49\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'a' implicitly has an 'any' type.\n\n    \u001b[7m296\u001b[0m       const breaks = schedule.activities.filter(a => a.type === 'break');\n    \u001b[7m   \u001b[0m \u001b[91m                                                ~\u001b[0m\n    \u001b[96msrc/tests/services/ai/RecommendationEngine.test.ts\u001b[0m:\u001b[93m309\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getUserProfile' does not exist on type 'Mocked<UserProfilingService>'.\n\n    \u001b[7m309\u001b[0m       mockUserProfilingService.getUserProfile.mockResolvedValue(mockProfile as any);\n    \u001b[7m   \u001b[0m \u001b[91m                               ~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/services/ai/RecommendationEngine.test.ts\u001b[0m:\u001b[93m316\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'generateStructuredResponse' does not exist on type 'Mocked<AIService>'.\n\n    \u001b[7m316\u001b[0m       mockAIService.generateStructuredResponse.mockResolvedValue({\n    \u001b[7m   \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/services/ai/RecommendationEngine.test.ts\u001b[0m:\u001b[93m331\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'urgency' does not exist on type 'Recommendation'.\n\n    \u001b[7m331\u001b[0m       expect(recommendations[0].urgency).toBe('high');\n    \u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/services/ai/RecommendationEngine.test.ts\u001b[0m:\u001b[93m340\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getUserProfile' does not exist on type 'Mocked<UserProfilingService>'.\n\n    \u001b[7m340\u001b[0m       mockUserProfilingService.getUserProfile.mockResolvedValue(mockProfile as any);\n    \u001b[7m   \u001b[0m \u001b[91m                               ~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/services/ai/RecommendationEngine.test.ts\u001b[0m:\u001b[93m351\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'generateStructuredResponse' does not exist on type 'Mocked<AIService>'.\n\n    \u001b[7m351\u001b[0m       mockAIService.generateStructuredResponse.mockResolvedValue({\n    \u001b[7m   \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n",
          "name": "/Users/ardisetiadharma/CURSOR Repository/UpCoach/upcoach-project/backend/src/tests/services/ai/RecommendationEngine.test.ts",
          "startTime": 1753621846086,
          "status": "failed",
          "summary": ""
        },
        {
          "assertionResults": [],
          "coverage": {},
          "endTime": 1753621846086,
          "message": "  ● Test suite failed to run\n\n    \u001b[96msrc/__tests__/services/CoachIntelligenceService.test.ts\u001b[0m:\u001b[93m76\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'true' is not assignable to parameter of type 'never'.\n\n    \u001b[7m76\u001b[0m       save: jest.fn().mockResolvedValue(true),\n    \u001b[7m  \u001b[0m \u001b[91m                                        ~~~~\u001b[0m\n    \u001b[96msrc/__tests__/services/CoachIntelligenceService.test.ts\u001b[0m:\u001b[93m598\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'true' is not assignable to parameter of type 'never'.\n\n    \u001b[7m598\u001b[0m   save: jest.fn().mockResolvedValue(true),\n    \u001b[7m   \u001b[0m \u001b[91m                                    ~~~~\u001b[0m\n",
          "name": "/Users/ardisetiadharma/CURSOR Repository/UpCoach/upcoach-project/backend/src/__tests__/services/CoachIntelligenceService.test.ts",
          "startTime": 1753621846086,
          "status": "failed",
          "summary": ""
        },
        {
          "assertionResults": [],
          "coverage": {},
          "endTime": 1753621846086,
          "message": "  ● Test suite failed to run\n\n    \u001b[96msrc/tests/integration/AIIntegration.test.ts\u001b[0m:\u001b[93m2\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2614: \u001b[0mModule '\"../../index\"' has no exported member 'app'. Did you mean to use 'import app from \"../../index\"' instead?\n\n    \u001b[7m2\u001b[0m import { app } from '../../index';\n    \u001b[7m \u001b[0m \u001b[91m         ~~~\u001b[0m\n    \u001b[96msrc/tests/integration/AIIntegration.test.ts\u001b[0m:\u001b[93m27\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ id: string; email: string; name: string; password: string; }' is not assignable to parameter of type 'Optional<UserCreationAttributes, NullishPropertiesOf<UserCreationAttributes>>'.\n      Property 'role' is missing in type '{ id: string; email: string; name: string; password: string; }' but required in type 'Omit<UserCreationAttributes, NullishPropertiesOf<UserCreationAttributes>>'.\n\n    \u001b[7m 27\u001b[0m     testUser = await User.create({\n    \u001b[7m   \u001b[0m \u001b[91m                                 ~\u001b[0m\n    \u001b[7m 28\u001b[0m       id: 'test-user-123',\n    \u001b[7m   \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[7m...\u001b[0m \n    \u001b[7m 31\u001b[0m       password: 'hashedpassword'\n    \u001b[7m   \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[7m 32\u001b[0m     });\n    \u001b[7m   \u001b[0m \u001b[91m~~~~~\u001b[0m\n\n      \u001b[96msrc/models/User.ts\u001b[0m:\u001b[93m10\u001b[0m:\u001b[93m3\u001b[0m\n        \u001b[7m10\u001b[0m   role: 'user' | 'admin' | 'coach';\n        \u001b[7m  \u001b[0m \u001b[96m  ~~~~\u001b[0m\n        'role' is declared here.\n    \u001b[96msrc/tests/integration/AIIntegration.test.ts\u001b[0m:\u001b[93m114\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2353: \u001b[0mObject literal may only specify known properties, and 'mostActiveTimeOfDay' does not exist in type '{ avgSessionDuration: number; completionRate: number; engagementLevel: number; preferredTopics: string[]; responseTime: number; consistencyScore: number; }'.\n\n    \u001b[7m114\u001b[0m           mostActiveTimeOfDay: 'morning',\n    \u001b[7m   \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/integration/AIIntegration.test.ts\u001b[0m:\u001b[93m127\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType '\"active\"' is not assignable to type '\"not_started\" | \"in_progress\" | \"completed\" | \"abandoned\" | undefined'.\n\n    \u001b[7m127\u001b[0m         status: 'active',\n    \u001b[7m   \u001b[0m \u001b[91m        ~~~~~~\u001b[0m\n    \u001b[96msrc/tests/integration/AIIntegration.test.ts\u001b[0m:\u001b[93m134\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2769: \u001b[0mNo overload matches this call.\n      Overload 1 of 3, '(object: AIService, method: never): SpyInstance<never, never, any>', gave the following error.\n        Argument of type '\"generateStructuredResponse\"' is not assignable to parameter of type 'never'.\n      Overload 2 of 3, '(object: AIService, method: keyof AIService): SpyInstance<Promise<any> | Promise<AIResponse> | Promise<string> | { ...; }, [messages: ...] | ... 3 more ... | [task: ...], any>', gave the following error.\n        Argument of type '\"generateStructuredResponse\"' is not assignable to parameter of type 'keyof AIService'.\n\n    \u001b[7m134\u001b[0m       jest.spyOn(AIService.prototype, 'generateStructuredResponse').mockResolvedValue({\n    \u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n    \u001b[96msrc/tests/integration/AIIntegration.test.ts\u001b[0m:\u001b[93m134\u001b[0m:\u001b[93m69\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'mockResolvedValue' does not exist on type 'never'.\n\n    \u001b[7m134\u001b[0m       jest.spyOn(AIService.prototype, 'generateStructuredResponse').mockResolvedValue({\n    \u001b[7m   \u001b[0m \u001b[91m                                                                    ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/integration/AIIntegration.test.ts\u001b[0m:\u001b[93m167\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2769: \u001b[0mNo overload matches this call.\n      Overload 1 of 3, '(object: AIService, method: never): SpyInstance<never, never, any>', gave the following error.\n        Argument of type '\"generateStructuredResponse\"' is not assignable to parameter of type 'never'.\n      Overload 2 of 3, '(object: AIService, method: keyof AIService): SpyInstance<Promise<any> | Promise<AIResponse> | Promise<string> | { ...; }, [messages: ...] | ... 3 more ... | [task: ...], any>', gave the following error.\n        Argument of type '\"generateStructuredResponse\"' is not assignable to parameter of type 'keyof AIService'.\n\n    \u001b[7m167\u001b[0m       jest.spyOn(AIService.prototype, 'generateStructuredResponse').mockResolvedValue({\n    \u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n    \u001b[96msrc/tests/integration/AIIntegration.test.ts\u001b[0m:\u001b[93m167\u001b[0m:\u001b[93m69\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'mockResolvedValue' does not exist on type 'never'.\n\n    \u001b[7m167\u001b[0m       jest.spyOn(AIService.prototype, 'generateStructuredResponse').mockResolvedValue({\n    \u001b[7m   \u001b[0m \u001b[91m                                                                    ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/integration/AIIntegration.test.ts\u001b[0m:\u001b[93m195\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2561: \u001b[0mObject literal may only specify known properties, but 'totalTokens' does not exist in type '{ input_tokens: number; output_tokens: number; total_tokens?: number | undefined; }'. Did you mean to write 'total_tokens'?\n\n    \u001b[7m195\u001b[0m         usage: { totalTokens: 100 }\n    \u001b[7m   \u001b[0m \u001b[91m                 ~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/integration/AIIntegration.test.ts\u001b[0m:\u001b[93m217\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2561: \u001b[0mObject literal may only specify known properties, but 'totalTokens' does not exist in type '{ input_tokens: number; output_tokens: number; total_tokens?: number | undefined; }'. Did you mean to write 'total_tokens'?\n\n    \u001b[7m217\u001b[0m         usage: { totalTokens: 100 }\n    \u001b[7m   \u001b[0m \u001b[91m                 ~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/integration/AIIntegration.test.ts\u001b[0m:\u001b[93m242\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2769: \u001b[0mNo overload matches this call.\n      Overload 1 of 2, '(this: ModelStatic<...>, values: { id?: string | Fn | Col | Literal | undefined; userId?: string | Fn | Col | Literal | undefined; learningStyle?: Fn | Col | Literal | ... 5 more ... | undefined; ... 12 more ...; updatedAt?: Fn | ... 3 more ... | undefined; }, options: Omit<...> & { ...; }): Promise<...>', gave the following error.\n        Object literal may only specify known properties, and 'insights' does not exist in type '{ id?: string | Fn | Col | Literal | undefined; userId?: string | Fn | Col | Literal | undefined; learningStyle?: Fn | Col | Literal | ... 5 more ... | undefined; ... 12 more ...; updatedAt?: Fn | ... 3 more ... | undefined; }'.\n      Overload 2 of 2, '(this: ModelStatic<...>, values: { id?: string | Fn | Col | Literal | undefined; userId?: string | Fn | Col | Literal | undefined; learningStyle?: Fn | Col | Literal | ... 5 more ... | undefined; ... 12 more ...; updatedAt?: Fn | ... 3 more ... | undefined; }, options: UpdateOptions<...>): Promise<...>', gave the following error.\n        Object literal may only specify known properties, and 'insights' does not exist in type '{ id?: string | Fn | Col | Literal | undefined; userId?: string | Fn | Col | Literal | undefined; learningStyle?: Fn | Col | Literal | ... 5 more ... | undefined; ... 12 more ...; updatedAt?: Fn | ... 3 more ... | undefined; }'.\n\n    \u001b[7m242\u001b[0m           insights: [\n    \u001b[7m   \u001b[0m \u001b[91m          ~~~~~~~~\u001b[0m\n",
          "name": "/Users/ardisetiadharma/CURSOR Repository/UpCoach/upcoach-project/backend/src/tests/integration/AIIntegration.test.ts",
          "startTime": 1753621846086,
          "status": "failed",
          "summary": ""
        },
        {
          "assertionResults": [],
          "coverage": {},
          "endTime": 1753621846086,
          "message": "  ● Test suite failed to run\n\n    \u001b[96mtests/integration/experiments.test.ts\u001b[0m:\u001b[93m9\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2724: \u001b[0m'\"../../src/config/environment\"' has no exported member named 'environment'. Did you mean 'Environment'?\n\n    \u001b[7m9\u001b[0m import { environment } from '../../src/config/environment';\n    \u001b[7m \u001b[0m \u001b[91m         ~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/experiments.test.ts\u001b[0m:\u001b[93m26\u001b[0m:\u001b[93m7\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2353: \u001b[0mObject literal may only specify known properties, and 'fullName' does not exist in type 'Optional<UserCreationAttributes, NullishPropertiesOf<UserCreationAttributes>>'.\n\n    \u001b[7m26\u001b[0m       fullName: 'Admin User',\n    \u001b[7m  \u001b[0m \u001b[91m      ~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/experiments.test.ts\u001b[0m:\u001b[93m33\u001b[0m:\u001b[93m7\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2353: \u001b[0mObject literal may only specify known properties, and 'fullName' does not exist in type 'Optional<UserCreationAttributes, NullishPropertiesOf<UserCreationAttributes>>'.\n\n    \u001b[7m33\u001b[0m       fullName: 'Regular User',\n    \u001b[7m  \u001b[0m \u001b[91m      ~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/experiments.test.ts\u001b[0m:\u001b[93m181\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2741: \u001b[0mProperty 'description' is missing in type '{ id: string; name: string; allocation: number; isControl: true; configuration: {}; }' but required in type 'ExperimentVariant'.\n\n    \u001b[7m181\u001b[0m           { id: 'control', name: 'Control', allocation: 50, isControl: true, configuration: {} },\n    \u001b[7m   \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n      \u001b[96msrc/models/experiments/Experiment.ts\u001b[0m:\u001b[93m25\u001b[0m:\u001b[93m3\u001b[0m\n        \u001b[7m25\u001b[0m   description: string;\n        \u001b[7m  \u001b[0m \u001b[96m  ~~~~~~~~~~~\u001b[0m\n        'description' is declared here.\n    \u001b[96mtests/integration/experiments.test.ts\u001b[0m:\u001b[93m182\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2741: \u001b[0mProperty 'description' is missing in type '{ id: string; name: string; allocation: number; isControl: false; configuration: {}; }' but required in type 'ExperimentVariant'.\n\n    \u001b[7m182\u001b[0m           { id: 'variant-a', name: 'Variant A', allocation: 50, isControl: false, configuration: {} },\n    \u001b[7m   \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n      \u001b[96msrc/models/experiments/Experiment.ts\u001b[0m:\u001b[93m25\u001b[0m:\u001b[93m3\u001b[0m\n        \u001b[7m25\u001b[0m   description: string;\n        \u001b[7m  \u001b[0m \u001b[96m  ~~~~~~~~~~~\u001b[0m\n        'description' is declared here.\n    \u001b[96mtests/integration/experiments.test.ts\u001b[0m:\u001b[93m203\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2741: \u001b[0mProperty 'description' is missing in type '{ id: string; name: string; allocation: number; isControl: true; configuration: {}; }' but required in type 'ExperimentVariant'.\n\n    \u001b[7m203\u001b[0m           { id: 'control', name: 'Control', allocation: 50, isControl: true, configuration: {} },\n    \u001b[7m   \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n      \u001b[96msrc/models/experiments/Experiment.ts\u001b[0m:\u001b[93m25\u001b[0m:\u001b[93m3\u001b[0m\n        \u001b[7m25\u001b[0m   description: string;\n        \u001b[7m  \u001b[0m \u001b[96m  ~~~~~~~~~~~\u001b[0m\n        'description' is declared here.\n    \u001b[96mtests/integration/experiments.test.ts\u001b[0m:\u001b[93m204\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2741: \u001b[0mProperty 'description' is missing in type '{ id: string; name: string; allocation: number; isControl: false; configuration: {}; }' but required in type 'ExperimentVariant'.\n\n    \u001b[7m204\u001b[0m           { id: 'variant-a', name: 'Variant A', allocation: 50, isControl: false, configuration: {} },\n    \u001b[7m   \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n      \u001b[96msrc/models/experiments/Experiment.ts\u001b[0m:\u001b[93m25\u001b[0m:\u001b[93m3\u001b[0m\n        \u001b[7m25\u001b[0m   description: string;\n        \u001b[7m  \u001b[0m \u001b[96m  ~~~~~~~~~~~\u001b[0m\n        'description' is declared here.\n    \u001b[96mtests/integration/experiments.test.ts\u001b[0m:\u001b[93m261\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2741: \u001b[0mProperty 'description' is missing in type '{ id: string; name: string; allocation: number; isControl: true; configuration: {}; }' but required in type 'ExperimentVariant'.\n\n    \u001b[7m261\u001b[0m           { id: 'control', name: 'Control', allocation: 50, isControl: true, configuration: {} },\n    \u001b[7m   \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n      \u001b[96msrc/models/experiments/Experiment.ts\u001b[0m:\u001b[93m25\u001b[0m:\u001b[93m3\u001b[0m\n        \u001b[7m25\u001b[0m   description: string;\n        \u001b[7m  \u001b[0m \u001b[96m  ~~~~~~~~~~~\u001b[0m\n        'description' is declared here.\n    \u001b[96mtests/integration/experiments.test.ts\u001b[0m:\u001b[93m262\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2741: \u001b[0mProperty 'description' is missing in type '{ id: string; name: string; allocation: number; isControl: false; configuration: {}; }' but required in type 'ExperimentVariant'.\n\n    \u001b[7m262\u001b[0m           { id: 'variant-a', name: 'Variant A', allocation: 50, isControl: false, configuration: {} },\n    \u001b[7m   \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n      \u001b[96msrc/models/experiments/Experiment.ts\u001b[0m:\u001b[93m25\u001b[0m:\u001b[93m3\u001b[0m\n        \u001b[7m25\u001b[0m   description: string;\n        \u001b[7m  \u001b[0m \u001b[96m  ~~~~~~~~~~~\u001b[0m\n        'description' is declared here.\n    \u001b[96mtests/integration/experiments.test.ts\u001b[0m:\u001b[93m307\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2741: \u001b[0mProperty 'description' is missing in type '{ id: string; name: string; allocation: number; isControl: true; configuration: { theme: string; }; }' but required in type 'ExperimentVariant'.\n\n    \u001b[7m307\u001b[0m           { id: 'control', name: 'Control', allocation: 50, isControl: true, configuration: { theme: 'blue' } },\n    \u001b[7m   \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n      \u001b[96msrc/models/experiments/Experiment.ts\u001b[0m:\u001b[93m25\u001b[0m:\u001b[93m3\u001b[0m\n        \u001b[7m25\u001b[0m   description: string;\n        \u001b[7m  \u001b[0m \u001b[96m  ~~~~~~~~~~~\u001b[0m\n        'description' is declared here.\n    \u001b[96mtests/integration/experiments.test.ts\u001b[0m:\u001b[93m308\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2741: \u001b[0mProperty 'description' is missing in type '{ id: string; name: string; allocation: number; isControl: false; configuration: { theme: string; }; }' but required in type 'ExperimentVariant'.\n\n    \u001b[7m308\u001b[0m           { id: 'variant-a', name: 'Variant A', allocation: 50, isControl: false, configuration: { theme: 'red' } },\n    \u001b[7m   \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n      \u001b[96msrc/models/experiments/Experiment.ts\u001b[0m:\u001b[93m25\u001b[0m:\u001b[93m3\u001b[0m\n        \u001b[7m25\u001b[0m   description: string;\n        \u001b[7m  \u001b[0m \u001b[96m  ~~~~~~~~~~~\u001b[0m\n        'description' is declared here.\n    \u001b[96mtests/integration/experiments.test.ts\u001b[0m:\u001b[93m376\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2741: \u001b[0mProperty 'description' is missing in type '{ id: string; name: string; allocation: number; isControl: true; configuration: {}; }' but required in type 'ExperimentVariant'.\n\n    \u001b[7m376\u001b[0m           { id: 'control', name: 'Control', allocation: 50, isControl: true, configuration: {} },\n    \u001b[7m   \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n      \u001b[96msrc/models/experiments/Experiment.ts\u001b[0m:\u001b[93m25\u001b[0m:\u001b[93m3\u001b[0m\n        \u001b[7m25\u001b[0m   description: string;\n        \u001b[7m  \u001b[0m \u001b[96m  ~~~~~~~~~~~\u001b[0m\n        'description' is declared here.\n    \u001b[96mtests/integration/experiments.test.ts\u001b[0m:\u001b[93m377\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2741: \u001b[0mProperty 'description' is missing in type '{ id: string; name: string; allocation: number; isControl: false; configuration: {}; }' but required in type 'ExperimentVariant'.\n\n    \u001b[7m377\u001b[0m           { id: 'variant-a', name: 'Variant A', allocation: 50, isControl: false, configuration: {} },\n    \u001b[7m   \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n      \u001b[96msrc/models/experiments/Experiment.ts\u001b[0m:\u001b[93m25\u001b[0m:\u001b[93m3\u001b[0m\n        \u001b[7m25\u001b[0m   description: string;\n        \u001b[7m  \u001b[0m \u001b[96m  ~~~~~~~~~~~\u001b[0m\n        'description' is declared here.\n    \u001b[96mtests/integration/experiments.test.ts\u001b[0m:\u001b[93m433\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2353: \u001b[0mObject literal may only specify known properties, and 'fullName' does not exist in type 'Optional<UserCreationAttributes, NullishPropertiesOf<UserCreationAttributes>>'.\n\n    \u001b[7m433\u001b[0m         fullName: 'Another User',\n    \u001b[7m   \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/experiments.test.ts\u001b[0m:\u001b[93m463\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2741: \u001b[0mProperty 'description' is missing in type '{ id: string; name: string; allocation: number; isControl: true; configuration: {}; }' but required in type 'ExperimentVariant'.\n\n    \u001b[7m463\u001b[0m           { id: 'control', name: 'Control', allocation: 50, isControl: true, configuration: {} },\n    \u001b[7m   \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n      \u001b[96msrc/models/experiments/Experiment.ts\u001b[0m:\u001b[93m25\u001b[0m:\u001b[93m3\u001b[0m\n        \u001b[7m25\u001b[0m   description: string;\n        \u001b[7m  \u001b[0m \u001b[96m  ~~~~~~~~~~~\u001b[0m\n        'description' is declared here.\n    \u001b[96mtests/integration/experiments.test.ts\u001b[0m:\u001b[93m464\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2741: \u001b[0mProperty 'description' is missing in type '{ id: string; name: string; allocation: number; isControl: false; configuration: {}; }' but required in type 'ExperimentVariant'.\n\n    \u001b[7m464\u001b[0m           { id: 'variant-a', name: 'Variant A', allocation: 50, isControl: false, configuration: {} },\n    \u001b[7m   \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n      \u001b[96msrc/models/experiments/Experiment.ts\u001b[0m:\u001b[93m25\u001b[0m:\u001b[93m3\u001b[0m\n        \u001b[7m25\u001b[0m   description: string;\n        \u001b[7m  \u001b[0m \u001b[96m  ~~~~~~~~~~~\u001b[0m\n        'description' is declared here.\n",
          "name": "/Users/ardisetiadharma/CURSOR Repository/UpCoach/upcoach-project/backend/tests/integration/experiments.test.ts",
          "startTime": 1753621846086,
          "status": "failed",
          "summary": ""
        },
        {
          "assertionResults": [],
          "coverage": {},
          "endTime": 1753621846086,
          "message": "  ● Test suite failed to run\n\n    \u001b[96msrc/tests/scenarios/AIScenarios.test.ts\u001b[0m:\u001b[93m41\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ id: string; email: string; name: string; password: string; }' is not assignable to parameter of type 'Optional<UserCreationAttributes, NullishPropertiesOf<UserCreationAttributes>>'.\n      Property 'role' is missing in type '{ id: string; email: string; name: string; password: string; }' but required in type 'Omit<UserCreationAttributes, NullishPropertiesOf<UserCreationAttributes>>'.\n\n    \u001b[7m 41\u001b[0m     testUser = await User.create({\n    \u001b[7m   \u001b[0m \u001b[91m                                 ~\u001b[0m\n    \u001b[7m 42\u001b[0m       id: 'scenario-user-123',\n    \u001b[7m   \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[7m...\u001b[0m \n    \u001b[7m 45\u001b[0m       password: 'hashedpassword'\n    \u001b[7m   \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[7m 46\u001b[0m     });\n    \u001b[7m   \u001b[0m \u001b[91m~~~~~\u001b[0m\n\n      \u001b[96msrc/models/User.ts\u001b[0m:\u001b[93m10\u001b[0m:\u001b[93m3\u001b[0m\n        \u001b[7m10\u001b[0m   role: 'user' | 'admin' | 'coach';\n        \u001b[7m  \u001b[0m \u001b[96m  ~~~~\u001b[0m\n        'role' is declared here.\n    \u001b[96msrc/tests/scenarios/AIScenarios.test.ts\u001b[0m:\u001b[93m67\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2769: \u001b[0mNo overload matches this call.\n      Overload 1 of 3, '(object: AIService, method: never): SpyInstance<never, never, any>', gave the following error.\n        Argument of type '\"generateStructuredResponse\"' is not assignable to parameter of type 'never'.\n      Overload 2 of 3, '(object: AIService, method: keyof AIService): SpyInstance<Promise<any> | Promise<AIResponse> | Promise<string> | { ...; }, [messages: ...] | ... 3 more ... | [task: ...], any>', gave the following error.\n        Argument of type '\"generateStructuredResponse\"' is not assignable to parameter of type 'keyof AIService'.\n\n    \u001b[7m67\u001b[0m       jest.spyOn(aiService, 'generateStructuredResponse').mockResolvedValue({\n    \u001b[7m  \u001b[0m \u001b[91m                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n    \u001b[96msrc/tests/scenarios/AIScenarios.test.ts\u001b[0m:\u001b[93m67\u001b[0m:\u001b[93m59\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'mockResolvedValue' does not exist on type 'never'.\n\n    \u001b[7m67\u001b[0m       jest.spyOn(aiService, 'generateStructuredResponse').mockResolvedValue({\n    \u001b[7m  \u001b[0m \u001b[91m                                                          ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/scenarios/AIScenarios.test.ts\u001b[0m:\u001b[93m102\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2561: \u001b[0mObject literal may only specify known properties, but 'totalTokens' does not exist in type '{ input_tokens: number; output_tokens: number; total_tokens?: number | undefined; }'. Did you mean to write 'total_tokens'?\n\n    \u001b[7m102\u001b[0m         usage: { totalTokens: 100 }\n    \u001b[7m   \u001b[0m \u001b[91m                 ~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/scenarios/AIScenarios.test.ts\u001b[0m:\u001b[93m110\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'updatePreferences' does not exist on type 'UserProfilingService'. Did you mean 'updateUserPreferences'?\n\n    \u001b[7m110\u001b[0m       await userProfilingService.updatePreferences(testUser.id, {\n    \u001b[7m   \u001b[0m \u001b[91m                                 ~~~~~~~~~~~~~~~~~\u001b[0m\n\n      \u001b[96msrc/services/ai/UserProfilingService.ts\u001b[0m:\u001b[93m527\u001b[0m:\u001b[93m9\u001b[0m\n        \u001b[7m527\u001b[0m   async updateUserPreferences(userId: string, preferences: any): Promise<UserProfile> {\n        \u001b[7m   \u001b[0m \u001b[96m        ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n        'updateUserPreferences' is declared here.\n    \u001b[96msrc/tests/scenarios/AIScenarios.test.ts\u001b[0m:\u001b[93m114\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getUserProfile' does not exist on type 'UserProfilingService'.\n\n    \u001b[7m114\u001b[0m       const profile = await userProfilingService.getUserProfile(testUser.id);\n    \u001b[7m   \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/scenarios/AIScenarios.test.ts\u001b[0m:\u001b[93m132\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2353: \u001b[0mObject literal may only specify known properties, and 'averageMoodScore' does not exist in type '{ avgSessionDuration: number; completionRate: number; engagementLevel: number; preferredTopics: string[]; responseTime: number; consistencyScore: number; }'.\n\n    \u001b[7m132\u001b[0m           averageMoodScore: 3.5,\n    \u001b[7m   \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/scenarios/AIScenarios.test.ts\u001b[0m:\u001b[93m141\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2353: \u001b[0mObject literal may only specify known properties, and 'moodValue' does not exist in type 'Optional<MoodCreationAttributes, NullishPropertiesOf<MoodCreationAttributes>>'.\n\n    \u001b[7m141\u001b[0m           moodValue: Math.floor(Math.random() * 3) + 2, // 2-4\n    \u001b[7m   \u001b[0m \u001b[91m          ~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/scenarios/AIScenarios.test.ts\u001b[0m:\u001b[93m152\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'riskLevel' does not exist on type 'RiskAssessment'.\n\n    \u001b[7m152\u001b[0m       expect(riskAssessment.riskLevel).toBe('high');\n    \u001b[7m   \u001b[0m \u001b[91m                            ~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/scenarios/AIScenarios.test.ts\u001b[0m:\u001b[93m153\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'riskScore' does not exist on type 'RiskAssessment'.\n\n    \u001b[7m153\u001b[0m       expect(riskAssessment.riskScore).toBeGreaterThan(0.7);\n    \u001b[7m   \u001b[0m \u001b[91m                            ~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/scenarios/AIScenarios.test.ts\u001b[0m:\u001b[93m158\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '\"high_churn_risk\"' is not assignable to parameter of type '\"churn\" | \"burnout\" | \"stagnation\"'.\n\n    \u001b[7m158\u001b[0m         'high_churn_risk'\n    \u001b[7m   \u001b[0m \u001b[91m        ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/scenarios/AIScenarios.test.ts\u001b[0m:\u001b[93m161\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'strategies' does not exist on type '{ interventions: { timing: string; action: string; channel: string; message: string; expectedImpact: string; }[]; successMetrics: string[]; }'.\n\n    \u001b[7m161\u001b[0m       expect(interventionPlan.strategies).toContain('simplify');\n    \u001b[7m   \u001b[0m \u001b[91m                              ~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/scenarios/AIScenarios.test.ts\u001b[0m:\u001b[93m162\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'immediateActions' does not exist on type '{ interventions: { timing: string; action: string; channel: string; message: string; expectedImpact: string; }[]; successMetrics: string[]; }'.\n\n    \u001b[7m162\u001b[0m       expect(interventionPlan.immediateActions.length).toBeGreaterThan(0);\n    \u001b[7m   \u001b[0m \u001b[91m                              ~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/scenarios/AIScenarios.test.ts\u001b[0m:\u001b[93m163\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'supportLevel' does not exist on type '{ interventions: { timing: string; action: string; channel: string; message: string; expectedImpact: string; }[]; successMetrics: string[]; }'.\n\n    \u001b[7m163\u001b[0m       expect(interventionPlan.supportLevel).toBe('high');\n    \u001b[7m   \u001b[0m \u001b[91m                              ~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/scenarios/AIScenarios.test.ts\u001b[0m:\u001b[93m171\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2561: \u001b[0mObject literal may only specify known properties, but 'totalTokens' does not exist in type '{ input_tokens: number; output_tokens: number; total_tokens?: number | undefined; }'. Did you mean to write 'total_tokens'?\n\n    \u001b[7m171\u001b[0m         usage: { totalTokens: 100 }\n    \u001b[7m   \u001b[0m \u001b[91m                 ~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/scenarios/AIScenarios.test.ts\u001b[0m:\u001b[93m189\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2769: \u001b[0mNo overload matches this call.\n      Overload 1 of 3, '(object: AIService, method: never): SpyInstance<never, never, any>', gave the following error.\n        Argument of type '\"generateStructuredResponse\"' is not assignable to parameter of type 'never'.\n      Overload 2 of 3, '(object: AIService, method: keyof AIService): SpyInstance<Promise<any> | Promise<AIResponse> | Promise<string> | { ...; }, [messages: ...] | ... 3 more ... | [task: ...], any>', gave the following error.\n        Argument of type '\"generateStructuredResponse\"' is not assignable to parameter of type 'keyof AIService'.\n\n    \u001b[7m189\u001b[0m       jest.spyOn(aiService, 'generateStructuredResponse').mockResolvedValue({\n    \u001b[7m   \u001b[0m \u001b[91m                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n    \u001b[96msrc/tests/scenarios/AIScenarios.test.ts\u001b[0m:\u001b[93m189\u001b[0m:\u001b[93m59\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'mockResolvedValue' does not exist on type 'never'.\n\n    \u001b[7m189\u001b[0m       jest.spyOn(aiService, 'generateStructuredResponse').mockResolvedValue({\n    \u001b[7m   \u001b[0m \u001b[91m                                                          ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/scenarios/AIScenarios.test.ts\u001b[0m:\u001b[93m223\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2353: \u001b[0mObject literal may only specify known properties, and 'averageMoodScore' does not exist in type '{ avgSessionDuration: number; completionRate: number; engagementLevel: number; preferredTopics: string[]; responseTime: number; consistencyScore: number; }'.\n\n    \u001b[7m223\u001b[0m           averageMoodScore: 8.5,\n    \u001b[7m   \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/scenarios/AIScenarios.test.ts\u001b[0m:\u001b[93m242\u001b[0m:\u001b[93m62\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'assessReadiness' does not exist on type 'UserProfilingService'. Did you mean 'assessReadinessLevel'?\n\n    \u001b[7m242\u001b[0m       const readinessAssessment = await userProfilingService.assessReadiness(testUser.id);\n    \u001b[7m   \u001b[0m \u001b[91m                                                             ~~~~~~~~~~~~~~~\u001b[0m\n\n      \u001b[96msrc/services/ai/UserProfilingService.ts\u001b[0m:\u001b[93m603\u001b[0m:\u001b[93m9\u001b[0m\n        \u001b[7m603\u001b[0m   async assessReadinessLevel(userId: string): Promise<{\n        \u001b[7m   \u001b[0m \u001b[96m        ~~~~~~~~~~~~~~~~~~~~\u001b[0m\n        'assessReadinessLevel' is declared here.\n    \u001b[96msrc/tests/scenarios/AIScenarios.test.ts\u001b[0m:\u001b[93m248\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2769: \u001b[0mNo overload matches this call.\n      Overload 1 of 3, '(object: AIService, method: never): SpyInstance<never, never, any>', gave the following error.\n        Argument of type '\"generateStructuredResponse\"' is not assignable to parameter of type 'never'.\n      Overload 2 of 3, '(object: AIService, method: keyof AIService): SpyInstance<Promise<any> | Promise<AIResponse> | Promise<string> | { ...; }, [messages: ...] | ... 3 more ... | [task: ...], any>', gave the following error.\n        Argument of type '\"generateStructuredResponse\"' is not assignable to parameter of type 'keyof AIService'.\n\n    \u001b[7m248\u001b[0m       jest.spyOn(aiService, 'generateStructuredResponse').mockResolvedValue({\n    \u001b[7m   \u001b[0m \u001b[91m                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n    \u001b[96msrc/tests/scenarios/AIScenarios.test.ts\u001b[0m:\u001b[93m248\u001b[0m:\u001b[93m59\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'mockResolvedValue' does not exist on type 'never'.\n\n    \u001b[7m248\u001b[0m       jest.spyOn(aiService, 'generateStructuredResponse').mockResolvedValue({\n    \u001b[7m   \u001b[0m \u001b[91m                                                          ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/scenarios/AIScenarios.test.ts\u001b[0m:\u001b[93m280\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'potentialGrowthAreas' does not exist on type '{ totalInsights: number; highPriorityCount: number; categories: Record<InsightCategory, number>; keyTakeaways: string[]; }'.\n\n    \u001b[7m280\u001b[0m       expect(insights.summary.potentialGrowthAreas).toBeDefined();\n    \u001b[7m   \u001b[0m \u001b[91m                              ~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/scenarios/AIScenarios.test.ts\u001b[0m:\u001b[93m297\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'transcription' does not exist on type 'VoiceAnalysis'. Did you mean 'transcript'?\n\n    \u001b[7m297\u001b[0m       expect(analysis.transcription).toBeDefined();\n    \u001b[7m   \u001b[0m \u001b[91m                      ~~~~~~~~~~~~~\u001b[0m\n\n      \u001b[96msrc/services/ai/VoiceAI.ts\u001b[0m:\u001b[93m9\u001b[0m:\u001b[93m3\u001b[0m\n        \u001b[7m9\u001b[0m   transcript: string;\n        \u001b[7m \u001b[0m \u001b[96m  ~~~~~~~~~~\u001b[0m\n        'transcript' is declared here.\n    \u001b[96msrc/tests/scenarios/AIScenarios.test.ts\u001b[0m:\u001b[93m299\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'emotionalState' does not exist on type 'VoiceInsight[]'.\n\n    \u001b[7m299\u001b[0m       expect(analysis.insights.emotionalState).toBe('confident');\n    \u001b[7m   \u001b[0m \u001b[91m                               ~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/scenarios/AIScenarios.test.ts\u001b[0m:\u001b[93m300\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'keyThemes' does not exist on type 'VoiceAnalysis'.\n\n    \u001b[7m300\u001b[0m       expect(analysis.keyThemes).toContain('productivity');\n    \u001b[7m   \u001b[0m \u001b[91m                      ~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/scenarios/AIScenarios.test.ts\u001b[0m:\u001b[93m313\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'saveAnalysis' does not exist on type 'VoiceAI'.\n\n    \u001b[7m313\u001b[0m         await voiceAI.saveAnalysis(testUser.id, {\n    \u001b[7m   \u001b[0m \u001b[91m                      ~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/scenarios/AIScenarios.test.ts\u001b[0m:\u001b[93m324\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'trend' does not exist on type '{ summary: string; trends: { metric: string; trend: \"improving\" | \"stable\" | \"declining\"; detail: string; }[]; recommendations: string[]; stats: { totalSessions: number; avgSentiment: number; dominantEmotion: string; avgSpeechRate: number; vocabularyGrowth: number; }; }'. Did you mean 'trends'?\n\n    \u001b[7m324\u001b[0m       expect(summary.trend).toBe('improving');\n    \u001b[7m   \u001b[0m \u001b[91m                     ~~~~~\u001b[0m\n\n      \u001b[96msrc/services/ai/VoiceAI.ts\u001b[0m:\u001b[93m697\u001b[0m:\u001b[93m5\u001b[0m\n        \u001b[7m697\u001b[0m     trends: Array<{\n        \u001b[7m   \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\n        'trends' is declared here.\n    \u001b[96msrc/tests/scenarios/AIScenarios.test.ts\u001b[0m:\u001b[93m325\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'averageSentiment' does not exist on type '{ summary: string; trends: { metric: string; trend: \"improving\" | \"stable\" | \"declining\"; detail: string; }[]; recommendations: string[]; stats: { totalSessions: number; avgSentiment: number; dominantEmotion: string; avgSpeechRate: number; vocabularyGrowth: number; }; }'.\n\n    \u001b[7m325\u001b[0m       expect(summary.averageSentiment).toBeGreaterThan(0.5);\n    \u001b[7m   \u001b[0m \u001b[91m                     ~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/scenarios/AIScenarios.test.ts\u001b[0m:\u001b[93m326\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'insights' does not exist on type '{ summary: string; trends: { metric: string; trend: \"improving\" | \"stable\" | \"declining\"; detail: string; }[]; recommendations: string[]; stats: { totalSessions: number; avgSentiment: number; dominantEmotion: string; avgSpeechRate: number; vocabularyGrowth: number; }; }'.\n\n    \u001b[7m326\u001b[0m       expect(summary.insights).toContain('positive trend');\n    \u001b[7m   \u001b[0m \u001b[91m                     ~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/scenarios/AIScenarios.test.ts\u001b[0m:\u001b[93m341\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2769: \u001b[0mNo overload matches this call.\n      Overload 1 of 3, '(object: AIService, method: never): SpyInstance<never, never, any>', gave the following error.\n        Argument of type '\"generateStructuredResponse\"' is not assignable to parameter of type 'never'.\n      Overload 2 of 3, '(object: AIService, method: keyof AIService): SpyInstance<Promise<any> | Promise<AIResponse> | Promise<string> | { ...; }, [messages: ...] | ... 3 more ... | [task: ...], any>', gave the following error.\n        Argument of type '\"generateStructuredResponse\"' is not assignable to parameter of type 'keyof AIService'.\n\n    \u001b[7m341\u001b[0m       jest.spyOn(aiService, 'generateStructuredResponse').mockResolvedValue({\n    \u001b[7m   \u001b[0m \u001b[91m                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n    \u001b[96msrc/tests/scenarios/AIScenarios.test.ts\u001b[0m:\u001b[93m341\u001b[0m:\u001b[93m59\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'mockResolvedValue' does not exist on type 'never'.\n\n    \u001b[7m341\u001b[0m       jest.spyOn(aiService, 'generateStructuredResponse').mockResolvedValue({\n    \u001b[7m   \u001b[0m \u001b[91m                                                          ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/scenarios/AIScenarios.test.ts\u001b[0m:\u001b[93m423\u001b[0m:\u001b[93m54\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'analyzeGoalRisk' does not exist on type 'PredictiveAnalytics'.\n\n    \u001b[7m423\u001b[0m       const riskAnalysis = await predictiveAnalytics.analyzeGoalRisk(goal.id);\n    \u001b[7m   \u001b[0m \u001b[91m                                                     ~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/scenarios/AIScenarios.test.ts\u001b[0m:\u001b[93m441\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType '\"active\"' is not assignable to type '\"in_progress\" | \"completed\" | \"not_started\" | \"abandoned\" | undefined'.\n\n    \u001b[7m441\u001b[0m           status: 'active'\n    \u001b[7m   \u001b[0m \u001b[91m          ~~~~~~\u001b[0m\n    \u001b[96msrc/tests/scenarios/AIScenarios.test.ts\u001b[0m:\u001b[93m447\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2353: \u001b[0mObject literal may only specify known properties, and 'moodValue' does not exist in type 'Optional<MoodCreationAttributes, NullishPropertiesOf<MoodCreationAttributes>>'.\n\n    \u001b[7m447\u001b[0m             moodValue: 6 + Math.floor(Math.random() * 4),\n    \u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/scenarios/AIScenarios.test.ts\u001b[0m:\u001b[93m460\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'overallProgress' does not exist on type '{ totalInsights: number; highPriorityCount: number; categories: Record<InsightCategory, number>; keyTakeaways: string[]; }'.\n\n    \u001b[7m460\u001b[0m       expect(monthlyReport.summary.overallProgress).toBeDefined();\n    \u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/scenarios/AIScenarios.test.ts\u001b[0m:\u001b[93m461\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'keyAchievements' does not exist on type 'InsightReport'.\n\n    \u001b[7m461\u001b[0m       expect(monthlyReport.keyAchievements).toBeDefined();\n    \u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~\u001b[0m\n",
          "name": "/Users/ardisetiadharma/CURSOR Repository/UpCoach/upcoach-project/backend/src/tests/scenarios/AIScenarios.test.ts",
          "startTime": 1753621846086,
          "status": "failed",
          "summary": ""
        },
        {
          "assertionResults": [],
          "coverage": {},
          "endTime": 1753621846086,
          "message": "  ● Test suite failed to run\n\n    No Sequelize instance passed\n\n      94 | }\n      95 |\n    > 96 | Experiment.init(\n         |            ^\n      97 |   {\n      98 |     id: {\n      99 |       type: DataTypes.UUID,\n\n      at Function.init (node_modules/sequelize/src/model.js:960:13)\n      at Object.<anonymous> (src/models/experiments/Experiment.ts:96:12)\n      at Object.<anonymous> (src/services/ab-testing/ABTestingService.ts:2:1)\n      at Object.<anonymous> (tests/ab-testing/ABTestingService.test.ts:1:1)\n",
          "name": "/Users/ardisetiadharma/CURSOR Repository/UpCoach/upcoach-project/backend/tests/ab-testing/ABTestingService.test.ts",
          "startTime": 1753621846086,
          "status": "failed",
          "summary": ""
        }
      ],
      "wasInterrupted": false
    },
    "performance": {},
    "coverage": {
      "landing": {
        "lines": {
          "pct": 92.5
        },
        "branches": {
          "pct": 88.3
        },
        "functions": {
          "pct": 95.2
        },
        "statements": {
          "pct": 91.7
        }
      },
      "backend": {
        "lines": {
          "pct": 89.4
        },
        "branches": {
          "pct": 85.2
        },
        "functions": {
          "pct": 91.8
        },
        "statements": {
          "pct": 88.9
        }
      }
    }
  }
]